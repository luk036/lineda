points of the polygon input are
(-999,967)
(-999,-39)
(-980,-39)
(-980,264)
(-909,264)
(-909,593)
(-940,593)
(-940,633)
(-856,633)
(-856,582)
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
type2:curNode is (-980,264)
in minNode() now the loop is: 
(-980,264)
(-909,264)
(-909,593)
(-940,593)
(-940,633)
(-856,633)
(-856,582)
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,-39)
(-980,-39)
minNode is: (-999,967)
type2:vertical condition 1
type3:curNode is (-940,593)
in minNode() now the loop is: 
(-940,593)
(-940,633)
(-856,633)
(-856,582)
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,264)
(-909,264)
(-909,593)
minNode is: (-999,264)
type3:vertical condition 1
type2:curNode is (-940,633)
in minNode() now the loop is: 
(-940,633)
(-856,633)
(-856,582)
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,593)
(-940,593)
minNode is: (-999,967)
type2:vertical condition 1
type1:curNode is (-856,633)
in minNode() now the loop is: 
(-856,633)
(-856,582)
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,633)
minNode is: (-776,698)
type1:vertical condition 1
type1:curNode is (-820,582)
in minNode() now the loop is: 
(-820,582)
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,633)
(-856,633)
(-856,582)
minNode is: (-776,633)
type1:vertical condition 1
type4:curNode is (-820,559)
in minNode() now the loop is: 
(-820,559)
(-824,559)
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,582)
(-820,582)
minNode is: (-776,141)
type4:vertical condition 1
type4:curNode is (-824,315)
in minNode() now the loop is: 
(-824,315)
(-882,315)
(-882,203)
(-811,203)
(-811,141)
(-776,141)
(-776,559)
(-824,559)
minNode is: (-776,141)
type4:vertical condition 1
type1:curNode is (-811,203)
in minNode() now the loop is: 
(-811,203)
(-811,141)
(-776,141)
(-776,315)
(-882,315)
(-882,203)
minNode is: (-776,315)
type1:vertical condition 1
type2:curNode is (-776,698)
in minNode() now the loop is: 
(-776,698)
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-960,723)
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,633)
(-776,633)
minNode is: (-960,723)
type2:horizontal condition 1
type1:curNode is (-744,698)
in minNode() now the loop is: 
(-744,698)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-776,723)
(-776,698)
minNode is: (-662,723)
type1:horizontal condition 1
type4:curNode is (-706,489)
in minNode() now the loop is: 
(-706,489)
(-715,489)
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,260)
(-702,260)
(-702,561)
(-706,561)
minNode is: (-702,260)
type4:vertical condition 1
type4:curNode is (-715,432)
in minNode() now the loop is: 
(-715,432)
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,260)
(-702,260)
(-702,489)
(-715,489)
minNode is: (-702,260)
type4:vertical condition 1
type3:curNode is (-718,432)
in minNode() now the loop is: 
(-718,432)
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,260)
(-702,260)
(-702,432)
minNode is: (-744,260)
type3:vertical condition 1
type2:curNode is (-718,626)
in minNode() now the loop is: 
(-718,626)
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,432)
(-718,432)
minNode is: (-744,723)
type2:vertical condition 1
type1:curNode is (-689,626)
in minNode() now the loop is: 
(-689,626)
(-689,571)
(-659,571)
(-659,436)
(-607,436)
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,626)
minNode is: (-607,637)
type1:vertical condition 1
type1:curNode is (-659,571)
in minNode() now the loop is: 
(-659,571)
(-659,436)
(-607,436)
(-607,626)
(-689,626)
(-689,571)
minNode is: (-607,626)
type1:vertical condition 1
type2:curNode is (-607,637)
in minNode() now the loop is: 
(-607,637)
(-509,637)
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,626)
(-607,626)
minNode is: (-744,723)
type2:vertical condition 1
type2:curNode is (-509,787)
in minNode() now the loop is: 
(-509,787)
(-493,787)
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,637)
(-509,637)
minNode is: (-518,818)
type2:horizontal condition 1
type2:curNode is (-493,806)
in minNode() now the loop is: 
(-493,806)
(-353,806)
(-353,817)
(-276,817)
(-276,818)
(-509,818)
(-509,787)
(-493,787)
minNode is: (-509,818)
type2:horizontal condition 1
type2:curNode is (-353,817)
in minNode() now the loop is: 
(-353,817)
(-276,817)
(-276,818)
(-493,818)
(-493,806)
(-353,806)
minNode is: (-493,818)
type2:horizontal condition 1
type3:curNode is (-518,818)
in minNode() now the loop is: 
(-518,818)
(-518,827)
(-662,827)
(-662,723)
(-744,723)
(-744,637)
(-509,637)
(-509,818)
minNode is: (-662,723)
type3:vertical condition 1
type4:curNode is (-662,723)
in minNode() now the loop is: 
(-662,723)
(-744,723)
(-744,637)
(-509,637)
(-509,818)
(-662,818)
minNode is: (-509,637)
type4:horizontal condition 1
type4:curNode is (-960,678)
in minNode() now the loop is: 
(-960,678)
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,633)
(-776,633)
(-776,723)
(-960,723)
minNode is: (-776,633)
type4:horizontal condition 1
type3:curNode is (-977,678)
in minNode() now the loop is: 
(-977,678)
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,633)
(-960,633)
(-960,678)
minNode is: (-999,633)
type3:vertical condition 1
type2:curNode is (-977,797)
in minNode() now the loop is: 
(-977,797)
(-839,797)
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,678)
(-977,678)
minNode is: (-999,967)
type2:vertical condition 1
type2:curNode is (-839,908)
in minNode() now the loop is: 
(-839,908)
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-999,967)
(-999,797)
(-839,797)
minNode is: (-999,967)
type2:horizontal condition 1
type1:curNode is (-661,908)
in minNode() now the loop is: 
(-661,908)
(-661,875)
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-700,983)
(-700,958)
(-830,958)
(-830,967)
(-839,967)
(-839,908)
minNode is: (531,983)
type1:horizontal condition 1
type1:curNode is (-612,875)
in minNode() now the loop is: 
(-612,875)
(-612,841)
(-584,841)
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-661,983)
(-661,875)
minNode is: (-584,883)
type1:vertical condition 1
type2:curNode is (-584,883)
in minNode() now the loop is: 
(-584,883)
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-661,983)
(-661,875)
(-584,875)
minNode is: (-589,919)
type2:horizontal condition 1
type1:curNode is (38,883)
in minNode() now the loop is: 
(38,883)
(38,870)
(271,870)
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-584,919)
(-584,883)
minNode is: (264,896)
type1:horizontal condition 1
type2:curNode is (271,878)
in minNode() now the loop is: 
(271,878)
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,896)
(38,896)
(38,870)
(271,870)
minNode is: (264,896)
type2:complex condition 1
type1:curNode is (332,878)
in minNode() now the loop is: 
(332,878)
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(313,903)
(313,912)
(264,912)
(264,878)
minNode is: (602,903)
type1:horizontal condition 1
type4:curNode is (332,804)
in minNode() now the loop is: 
(332,804)
(264,804)
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,777)
(485,777)
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(332,903)
minNode is: (336,777)
type4:complex condition 1
type4:curNode is (264,775)
in minNode() now the loop is: 
(264,775)
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(336,765)
(336,804)
(264,804)
minNode is: (336,765)
type4:horizontal condition 1
type3:curNode is (160,775)
in minNode() now the loop is: 
(160,775)
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(188,763)
(188,765)
(264,765)
(264,775)
minNode is: (15,763)
type3:horizontal condition 1
type2:curNode is (160,810)
in minNode() now the loop is: 
(160,810)
(185,810)
(185,814)
(-103,814)
(-103,781)
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(160,763)
minNode is: (-103,814)
type2:horizontal condition 1
type1:curNode is (86,781)
in minNode() now the loop is: 
(86,781)
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(160,763)
(160,814)
(-103,814)
(-103,781)
minNode is: (160,814)
type1:horizontal condition 1
type4:curNode is (86,778)
in minNode() now the loop is: 
(86,778)
(-236,778)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(160,763)
(160,814)
(86,814)
minNode is: (160,763)
type4:horizontal condition 1
type4:curNode is (-236,720)
in minNode() now the loop is: 
(-236,720)
(-403,720)
(-403,624)
(-397,624)
(-397,712)
(-244,712)
(-244,691)
(-174,691)
(-174,718)
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-236,778)
minNode is: (-174,691)
type4:horizontal condition 1
type2:curNode is (-397,712)
in minNode() now the loop is: 
(-397,712)
(-244,712)
(-244,691)
(-236,691)
(-236,720)
(-403,720)
(-403,624)
(-397,624)
minNode is: (-403,720)
type2:vertical condition 1
type1:curNode is (-244,712)
in minNode() now the loop is: 
(-244,712)
(-244,691)
(-236,691)
(-236,720)
(-403,720)
(-403,712)
minNode is: (-236,720)
type1:vertical condition 1
type3:curNode is (-189,718)
in minNode() now the loop is: 
(-189,718)
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-236,778)
(-236,691)
(-174,691)
(-174,718)
minNode is: (-236,691)
type3:horizontal condition 1
type2:curNode is (-189,759)
in minNode() now the loop is: 
(-189,759)
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-236,778)
(-236,691)
(-189,691)
minNode is: (-236,778)
type2:horizontal condition 1
type1:curNode is (-69,759)
in minNode() now the loop is: 
(-69,759)
(-69,663)
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-189,778)
(-189,759)
minNode is: (86,778)
type1:horizontal condition 1
type1:curNode is (-51,663)
in minNode() now the loop is: 
(-51,663)
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-69,778)
(-69,663)
minNode is: (-1,683)
type1:vertical condition 1
type4:curNode is (-51,634)
in minNode() now the loop is: 
(-51,634)
(-156,634)
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,663)
(-51,663)
minNode is: (-1,606)
type4:vertical condition 1
type4:curNode is (-156,619)
in minNode() now the loop is: 
(-156,619)
(-231,619)
(-231,589)
(-383,589)
(-383,566)
(79,566)
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,634)
(-156,634)
minNode is: (79,566)
type4:horizontal condition 1
type4:curNode is (-231,589)
in minNode() now the loop is: 
(-231,589)
(-383,589)
(-383,566)
(-156,566)
(-156,619)
(-231,619)
minNode is: (-156,566)
type4:horizontal condition 1
type2:curNode is (79,614)
in minNode() now the loop is: 
(79,614)
(405,614)
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,606)
(-1,606)
(-1,634)
(-156,634)
(-156,566)
(79,566)
minNode is: (22,712)
type2:vertical condition 1
type2:curNode is (405,619)
in minNode() now the loop is: 
(405,619)
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,700)
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,614)
(405,614)
minNode is: (404,700)
type2:complex condition 1
type1:curNode is (438,619)
in minNode() now the loop is: 
(438,619)
(438,568)
(420,568)
(420,520)
(524,520)
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,619)
minNode is: (524,656)
type1:vertical condition 1
type4:curNode is (438,568)
in minNode() now the loop is: 
(438,568)
(420,568)
(420,520)
(524,520)
(524,619)
(438,619)
minNode is: (524,520)
type4:horizontal condition 1
type2:curNode is (524,656)
in minNode() now the loop is: 
(524,656)
(735,656)
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(404,754)
(404,619)
(524,619)
minNode is: (404,754)
type2:horizontal condition 1
type2:curNode is (735,805)
in minNode() now the loop is: 
(735,805)
(753,805)
(753,739)
(800,739)
(800,813)
(722,813)
(722,729)
(705,729)
(705,754)
(524,754)
(524,656)
(735,656)
minNode is: (722,813)
type2:horizontal condition 1
type1:curNode is (753,805)
in minNode() now the loop is: 
(753,805)
(753,739)
(800,739)
(800,813)
(735,813)
(735,805)
minNode is: (800,813)
type1:horizontal condition 1
type4:curNode is (722,729)
in minNode() now the loop is: 
(722,729)
(705,729)
(705,754)
(524,754)
(524,656)
(735,656)
(735,813)
(722,813)
minNode is: (735,656)
type4:vertical condition 1
type3:curNode is (705,729)
in minNode() now the loop is: 
(705,729)
(705,754)
(524,754)
(524,656)
(735,656)
(735,729)
minNode is: (524,656)
type3:horizontal condition 1
type3:curNode is (284,700)
in minNode() now the loop is: 
(284,700)
(284,747)
(252,747)
(252,710)
(120,710)
(120,712)
(22,712)
(22,614)
(405,614)
(405,700)
minNode is: (22,614)
type3:horizontal condition 1
type4:curNode is (252,710)
in minNode() now the loop is: 
(252,710)
(120,710)
(120,712)
(22,712)
(22,614)
(284,614)
(284,747)
(252,747)
minNode is: (284,614)
type4:vertical condition 1
type3:curNode is (120,710)
in minNode() now the loop is: 
(120,710)
(120,712)
(22,712)
(22,614)
(284,614)
(284,710)
minNode is: (22,614)
type3:horizontal condition 1
type4:curNode is (22,606)
in minNode() now the loop is: 
(22,606)
(-1,606)
(-1,634)
(-156,634)
(-156,566)
(79,566)
(79,614)
(22,614)
minNode is: (79,566)
type4:horizontal condition 1
type3:curNode is (-1,606)
in minNode() now the loop is: 
(-1,606)
(-1,634)
(-156,634)
(-156,566)
(22,566)
(22,606)
minNode is: (-156,566)
type3:horizontal condition 1
type2:curNode is (-1,683)
in minNode() now the loop is: 
(-1,683)
(21,683)
(21,731)
(15,731)
(15,763)
(86,763)
(86,778)
(-69,778)
(-69,663)
(-1,663)
minNode is: (-69,778)
type2:vertical condition 1
type3:curNode is (15,731)
in minNode() now the loop is: 
(15,731)
(15,763)
(86,763)
(86,778)
(-69,778)
(-69,683)
(21,683)
(21,731)
minNode is: (-69,683)
type3:horizontal condition 1
type2:curNode is (15,763)
in minNode() now the loop is: 
(15,763)
(86,763)
(86,778)
(-69,778)
(-69,683)
(15,683)
minNode is: (-69,778)
type2:horizontal condition 1
type2:curNode is (188,765)
in minNode() now the loop is: 
(188,765)
(264,765)
(264,775)
(160,775)
(160,763)
(188,763)
minNode is: (160,775)
type2:horizontal condition 1
type2:curNode is (485,796)
in minNode() now the loop is: 
(485,796)
(629,796)
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(332,903)
(332,777)
(485,777)
minNode is: (332,903)
type2:horizontal condition 1
type2:curNode is (629,832)
in minNode() now the loop is: 
(629,832)
(646,832)
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,903)
(485,903)
(485,796)
(629,796)
minNode is: (602,903)
type2:complex condition 1
type2:curNode is (646,834)
in minNode() now the loop is: 
(646,834)
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,832)
(646,832)
minNode is: (602,911)
type2:vertical condition 1
type1:curNode is (814,834)
in minNode() now the loop is: 
(814,834)
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(874,841)
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,834)
minNode is: (874,841)
type1:complex condition 1
type4:curNode is (814,599)
in minNode() now the loop is: 
(814,599)
(780,599)
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(814,841)
minNode is: (863,432)
type4:vertical condition 1
type4:curNode is (780,487)
in minNode() now the loop is: 
(780,487)
(772,487)
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,599)
(780,599)
minNode is: (863,432)
type4:vertical condition 1
type4:curNode is (772,432)
in minNode() now the loop is: 
(772,432)
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(863,432)
(863,487)
(772,487)
minNode is: (848,432)
type4:complex condition 2
type3:curNode is (762,432)
in minNode() now the loop is: 
(762,432)
(762,475)
(725,475)
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(707,349)
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
minNode is: (707,349)
type3:complex condition 1
type4:curNode is (725,440)
in minNode() now the loop is: 
(725,440)
(601,440)
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(762,349)
(762,475)
(725,475)
minNode is: (762,349)
type4:vertical condition 1
type4:curNode is (601,386)
in minNode() now the loop is: 
(601,386)
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(762,349)
(762,440)
(601,440)
minNode is: (762,349)
type4:horizontal condition 1
type3:curNode is (589,386)
in minNode() now the loop is: 
(589,386)
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,349)
(601,349)
(601,386)
minNode is: (559,349)
type3:vertical condition 1
type2:curNode is (589,492)
in minNode() now the loop is: 
(589,492)
(732,492)
(732,498)
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,386)
(589,386)
minNode is: (559,585)
type2:vertical condition 1
type3:curNode is (696,498)
in minNode() now the loop is: 
(696,498)
(696,631)
(562,631)
(562,606)
(632,606)
(632,585)
(559,585)
(559,492)
(732,492)
(732,498)
minNode is: (559,492)
type3:horizontal condition 1
type1:curNode is (632,606)
in minNode() now the loop is: 
(632,606)
(632,585)
(559,585)
(559,492)
(696,492)
(696,631)
(562,631)
(562,606)
minNode is: (696,631)
type1:horizontal condition 1
type4:curNode is (632,585)
in minNode() now the loop is: 
(632,585)
(559,585)
(559,492)
(696,492)
(696,631)
(632,631)
minNode is: (696,492)
type4:vertical condition 1
type4:curNode is (707,338)
in minNode() now the loop is: 
(707,338)
(665,338)
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(707,432)
minNode is: (805,177)
type4:horizontal condition 1
type4:curNode is (665,314)
in minNode() now the loop is: 
(665,314)
(574,314)
(574,313)
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(707,177)
(707,338)
(665,338)
minNode is: (706,313)
type4:horizontal condition 1
type1:curNode is (706,313)
in minNode() now the loop is: 
(706,313)
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(707,177)
(707,338)
(665,338)
(665,313)
minNode is: (707,338)
type1:vertical condition 1
type4:curNode is (706,252)
in minNode() now the loop is: 
(706,252)
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(707,177)
(707,313)
(706,313)
minNode is: (707,177)
type4:vertical condition 1
type3:curNode is (670,252)
in minNode() now the loop is: 
(670,252)
(670,265)
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(707,177)
(707,252)
minNode is: (667,177)
type3:horizontal condition 1
type3:curNode is (558,265)
in minNode() now the loop is: 
(558,265)
(558,359)
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(670,177)
(670,265)
minNode is: (553,254)
type3:vertical condition 1
type3:curNode is (515,359)
in minNode() now the loop is: 
(515,359)
(515,421)
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(553,293)
(553,265)
(558,265)
(558,359)
minNode is: (432,293)
type3:horizontal condition 1
type3:curNode is (498,421)
in minNode() now the loop is: 
(498,421)
(498,511)
(388,511)
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,293)
(515,293)
(515,421)
minNode is: (432,293)
type3:vertical condition 1
type4:curNode is (388,497)
in minNode() now the loop is: 
(388,497)
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(432,423)
(432,421)
(498,421)
(498,511)
(388,511)
minNode is: (432,423)
type4:horizontal condition 1
type3:curNode is (364,497)
in minNode() now the loop is: 
(364,497)
(364,521)
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(322,469)
(322,423)
(388,423)
(388,497)
minNode is: (322,469)
type3:complex condition 1
type3:curNode is (230,521)
in minNode() now the loop is: 
(230,521)
(230,544)
(193,544)
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(289,504)
(289,469)
(364,469)
(364,521)
minNode is: (216,504)
type3:horizontal condition 1
type4:curNode is (193,535)
in minNode() now the loop is: 
(193,535)
(-144,535)
(-144,435)
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,544)
(193,544)
minNode is: (230,504)
type4:vertical condition 1
type1:curNode is (-110,435)
in minNode() now the loop is: 
(-110,435)
(-110,404)
(-98,404)
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(-144,535)
(-144,435)
minNode is: (-98,520)
type1:vertical condition 1
type2:curNode is (-98,520)
in minNode() now the loop is: 
(-98,520)
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(-144,535)
(-144,435)
(-98,435)
minNode is: (-144,535)
type2:horizontal condition 1
type1:curNode is (-5,520)
in minNode() now the loop is: 
(-5,520)
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(-98,535)
(-98,520)
minNode is: (230,535)
type1:horizontal condition 1
type4:curNode is (-5,426)
in minNode() now the loop is: 
(-5,426)
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(-5,535)
minNode is: (25,416)
type4:horizontal condition 1
type3:curNode is (-40,426)
in minNode() now the loop is: 
(-40,426)
(-40,500)
(-66,500)
(-66,435)
(-51,435)
(-51,416)
(-5,416)
(-5,426)
minNode is: (-51,416)
type3:horizontal condition 1
type1:curNode is (-51,435)
in minNode() now the loop is: 
(-51,435)
(-51,416)
(-40,416)
(-40,500)
(-66,500)
(-66,435)
minNode is: (-40,500)
type1:vertical condition 1
type1:curNode is (25,416)
in minNode() now the loop is: 
(25,416)
(25,406)
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(-5,535)
(-5,416)
minNode is: (230,535)
type1:horizontal condition 1
type1:curNode is (42,406)
in minNode() now the loop is: 
(42,406)
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(25,535)
(25,406)
minNode is: (230,535)
type1:horizontal condition 1
type4:curNode is (42,343)
in minNode() now the loop is: 
(42,343)
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,332)
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(42,535)
minNode is: (141,332)
type4:complex condition 1
type3:curNode is (-46,343)
in minNode() now the loop is: 
(-46,343)
(-46,366)
(-53,366)
(-53,381)
(-187,381)
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
minNode is: (-187,294)
type3:vertical condition 1
type3:curNode is (-53,366)
in minNode() now the loop is: 
(-53,366)
(-53,381)
(-187,381)
(-187,343)
(-46,343)
(-46,366)
minNode is: (-187,343)
type3:horizontal condition 1
type4:curNode is (-187,294)
in minNode() now the loop is: 
(-187,294)
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
(-187,343)
minNode is: (-121,264)
type4:horizontal condition 1
type3:curNode is (-261,294)
in minNode() now the loop is: 
(-261,294)
(-261,472)
(-347,472)
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-187,264)
(-187,294)
minNode is: (-264,264)
type3:horizontal condition 1
type4:curNode is (-347,470)
in minNode() now the loop is: 
(-347,470)
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,472)
(-347,472)
minNode is: (-261,264)
type4:vertical condition 1
type3:curNode is (-441,470)
in minNode() now the loop is: 
(-441,470)
(-441,481)
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,470)
minNode is: (-478,452)
type3:vertical condition 1
type3:curNode is (-442,481)
in minNode() now the loop is: 
(-442,481)
(-442,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,470)
(-441,470)
(-441,481)
minNode is: (-478,470)
type3:horizontal condition 1
type3:curNode is (-492,521)
in minNode() now the loop is: 
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,470)
(-442,470)
(-442,521)
minNode is: (-506,509)
type3:vertical condition 1
type2:curNode is (-558,587)
in minNode() now the loop is: 
(-558,587)
(-520,587)
(-520,524)
(-506,524)
(-506,521)
(-492,521)
(-492,619)
(-564,619)
(-564,545)
(-558,545)
minNode is: (-564,619)
type2:vertical condition 1
type1:curNode is (-520,587)
in minNode() now the loop is: 
(-520,587)
(-520,524)
(-506,524)
(-506,521)
(-492,521)
(-492,619)
(-564,619)
(-564,587)
minNode is: (-492,619)
type1:vertical condition 1
type1:curNode is (-506,524)
in minNode() now the loop is: 
(-506,524)
(-506,521)
(-492,521)
(-492,587)
(-520,587)
(-520,524)
minNode is: (-492,587)
type1:vertical condition 1
type4:curNode is (-506,509)
in minNode() now the loop is: 
(-506,509)
(-531,509)
(-531,476)
(-478,476)
(-478,470)
(-442,470)
(-442,521)
(-506,521)
minNode is: (-478,476)
type4:horizontal condition 1
type1:curNode is (-478,476)
in minNode() now the loop is: 
(-478,476)
(-478,470)
(-442,470)
(-442,521)
(-506,521)
(-506,476)
minNode is: (-442,521)
type1:vertical condition 1
type4:curNode is (-478,452)
in minNode() now the loop is: 
(-478,452)
(-500,452)
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,407)
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,470)
(-478,470)
minNode is: (-386,407)
type4:complex condition 1
type4:curNode is (-500,281)
in minNode() now the loop is: 
(-500,281)
(-552,281)
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,342)
(-386,342)
(-386,452)
(-500,452)
minNode is: (-402,181)
type4:vertical condition 1
type4:curNode is (-552,180)
in minNode() now the loop is: 
(-552,180)
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,126)
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,281)
(-552,281)
minNode is: (-535,126)
type4:complex condition 1
type3:curNode is (-558,180)
in minNode() now the loop is: 
(-558,180)
(-558,219)
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,41)
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,180)
minNode is: (-670,41)
type3:vertical condition 1
type3:curNode is (-559,219)
in minNode() now the loop is: 
(-559,219)
(-559,352)
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,180)
(-558,180)
(-558,219)
minNode is: (-670,180)
type3:horizontal condition 1
type3:curNode is (-683,352)
in minNode() now the loop is: 
(-683,352)
(-683,435)
(-687,435)
(-687,183)
(-670,183)
(-670,180)
(-559,180)
(-559,352)
minNode is: (-687,183)
type3:vertical condition 1
type1:curNode is (-670,183)
in minNode() now the loop is: 
(-670,183)
(-670,180)
(-559,180)
(-559,352)
(-687,352)
(-687,183)
minNode is: (-559,352)
type1:vertical condition 1
type1:curNode is (-655,41)
in minNode() now the loop is: 
(-655,41)
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,180)
(-670,180)
(-670,41)
minNode is: (-535,180)
type1:vertical condition 1
type4:curNode is (-655,10)
in minNode() now the loop is: 
(-655,10)
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,8)
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,41)
(-655,41)
minNode is: (-646,8)
type4:complex condition 1
type3:curNode is (-696,10)
in minNode() now the loop is: 
(-696,10)
(-696,111)
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-701,1)
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,10)
minNode is: (-701,1)
type3:complex condition 1
type3:curNode is (-791,111)
in minNode() now the loop is: 
(-791,111)
(-791,124)
(-794,124)
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-696,1)
(-696,111)
minNode is: (-794,101)
type3:vertical condition 1
type4:curNode is (-794,101)
in minNode() now the loop is: 
(-794,101)
(-841,101)
(-841,47)
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-696,1)
(-696,111)
(-794,111)
minNode is: (-696,1)
type4:vertical condition 1
type1:curNode is (-833,47)
in minNode() now the loop is: 
(-833,47)
(-833,-57)
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-696,1)
(-696,101)
(-841,101)
(-841,47)
minNode is: (-696,101)
type1:horizontal condition 1
type1:curNode is (-809,-57)
in minNode() now the loop is: 
(-809,-57)
(-809,-119)
(-770,-119)
(-770,1)
(-696,1)
(-696,101)
(-833,101)
(-833,-57)
minNode is: (-770,1)
type1:vertical condition 1
type2:curNode is (-770,1)
in minNode() now the loop is: 
(-770,1)
(-696,1)
(-696,101)
(-833,101)
(-833,-57)
(-770,-57)
minNode is: (-833,101)
type2:vertical condition 1
type4:curNode is (-701,-138)
in minNode() now the loop is: 
(-701,-138)
(-805,-138)
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-646,-155)
(-646,10)
(-701,10)
minNode is: (-646,-155)
type4:horizontal condition 1
type4:curNode is (-805,-201)
in minNode() now the loop is: 
(-805,-201)
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-289)
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-701,-155)
(-701,-138)
(-805,-138)
minNode is: (-775,-289)
type4:complex condition 1
type3:curNode is (-812,-201)
in minNode() now the loop is: 
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-201)
minNode is: (-847,-264)
type3:vertical condition 1
type4:curNode is (-847,-264)
in minNode() now the loop is: 
(-847,-264)
(-884,-264)
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-201)
(-847,-201)
minNode is: (-775,-471)
type4:vertical condition 1
type4:curNode is (-884,-359)
in minNode() now the loop is: 
(-884,-359)
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-264)
(-884,-264)
minNode is: (-775,-471)
type4:vertical condition 1
type3:curNode is (-904,-359)
in minNode() now the loop is: 
(-904,-359)
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-359)
minNode is: (-931,-417)
type3:vertical condition 1
type2:curNode is (-904,-119)
in minNode() now the loop is: 
(-904,-119)
(-903,-119)
(-903,43)
(-923,43)
(-923,-187)
(-931,-187)
(-931,-359)
(-904,-359)
minNode is: (-923,43)
type2:vertical condition 1
type4:curNode is (-923,-187)
in minNode() now the loop is: 
(-923,-187)
(-931,-187)
(-931,-359)
(-904,-359)
(-904,-119)
(-923,-119)
minNode is: (-904,-359)
type4:vertical condition 1
type4:curNode is (-931,-417)
in minNode() now the loop is: 
(-931,-417)
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-359)
(-931,-359)
minNode is: (-923,-468)
type4:horizontal condition 1
type3:curNode is (-944,-417)
in minNode() now the loop is: 
(-944,-417)
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-966,-436)
(-966,-468)
(-931,-468)
(-931,-417)
minNode is: (-966,-436)
type3:complex condition 1
type2:curNode is (-944,-119)
in minNode() now the loop is: 
(-944,-119)
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-944,-436)
minNode is: (-977,-10)
type2:vertical condition 1
type4:curNode is (-977,-146)
in minNode() now the loop is: 
(-977,-146)
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-944,-436)
(-944,-119)
(-977,-119)
minNode is: (-944,-436)
type4:vertical condition 1
type3:curNode is (-985,-146)
in minNode() now the loop is: 
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-459)
(-991,-459)
(-991,-436)
(-944,-436)
(-944,-146)
minNode is: (-996,-459)
type3:vertical condition 1
type2:curNode is (-991,-436)
in minNode() now the loop is: 
(-991,-436)
(-944,-436)
(-944,-146)
(-996,-146)
(-996,-459)
(-991,-459)
minNode is: (-996,-146)
type2:vertical condition 1
type1:curNode is (-923,-468)
in minNode() now the loop is: 
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-359)
(-931,-359)
(-931,-468)
minNode is: (-823,-417)
type1:vertical condition 1
type1:curNode is (-863,-488)
in minNode() now the loop is: 
(-863,-488)
(-863,-506)
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-468)
(-923,-468)
(-923,-488)
minNode is: (-823,-468)
type1:horizontal condition 1
type3:curNode is (-823,-501)
in minNode() now the loop is: 
(-823,-501)
(-823,-468)
(-863,-468)
(-863,-506)
(-768,-506)
(-768,-501)
minNode is: (-863,-506)
type3:horizontal condition 1
type2:curNode is (-823,-417)
in minNode() now the loop is: 
(-823,-417)
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-359)
(-931,-359)
(-931,-468)
(-823,-468)
minNode is: (-931,-359)
type2:horizontal condition 1
type1:curNode is (-783,-417)
in minNode() now the loop is: 
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-359)
(-823,-359)
(-823,-417)
minNode is: (-775,-359)
type1:vertical condition 1
type1:curNode is (-746,-289)
in minNode() now the loop is: 
(-746,-289)
(-746,-367)
(-709,-367)
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-709,-195)
(-709,-155)
(-701,-155)
(-701,-138)
(-805,-138)
(-805,-289)
minNode is: (-709,-195)
type1:complex condition 1
type2:curNode is (-709,-364)
in minNode() now the loop is: 
(-709,-364)
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-746,-195)
(-746,-367)
(-709,-367)
minNode is: (-746,-195)
type2:vertical condition 1
type1:curNode is (-650,-364)
in minNode() now the loop is: 
(-650,-364)
(-650,-412)
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-195)
(-746,-195)
(-746,-364)
minNode is: (-647,-238)
type1:complex condition 1
type1:curNode is (-647,-412)
in minNode() now the loop is: 
(-647,-412)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-650,-238)
(-650,-412)
minNode is: (-621,-238)
type1:horizontal condition 1
type4:curNode is (-487,-167)
in minNode() now the loop is: 
(-487,-167)
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-472)
(-397,-472)
(-397,-144)
(-487,-144)
minNode is: (-397,-472)
type4:vertical condition 1
type1:curNode is (-508,-173)
in minNode() now the loop is: 
(-508,-173)
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-472)
(-397,-472)
(-397,-167)
(-528,-167)
(-528,-173)
minNode is: (-397,-167)
type1:horizontal condition 1
type4:curNode is (-508,-227)
in minNode() now the loop is: 
(-508,-227)
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-472)
(-397,-472)
(-397,-167)
(-508,-167)
minNode is: (-397,-472)
type4:vertical condition 1
type3:curNode is (-557,-227)
in minNode() now the loop is: 
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-238)
(-647,-238)
(-647,-472)
(-397,-472)
(-397,-227)
minNode is: (-621,-238)
type3:vertical condition 1
type4:curNode is (-621,-238)
in minNode() now the loop is: 
(-621,-238)
(-647,-238)
(-647,-472)
(-397,-472)
(-397,-227)
(-621,-227)
minNode is: (-397,-472)
type4:vertical condition 1
type2:curNode is (-709,-155)
in minNode() now the loop is: 
(-709,-155)
(-701,-155)
(-701,-138)
(-805,-138)
(-805,-289)
(-709,-289)
minNode is: (-805,-138)
type2:horizontal condition 1
type1:curNode is (-615,8)
in minNode() now the loop is: 
(-615,8)
(-615,-150)
(-545,-150)
(-545,-130)
(-561,-130)
(-561,33)
(-535,33)
(-535,41)
(-655,41)
(-655,8)
minNode is: (-535,41)
type1:horizontal condition 1
type3:curNode is (-561,-130)
in minNode() now the loop is: 
(-561,-130)
(-561,33)
(-535,33)
(-535,41)
(-615,41)
(-615,-150)
(-545,-150)
(-545,-130)
minNode is: (-615,-150)
type3:horizontal condition 1
type2:curNode is (-561,33)
in minNode() now the loop is: 
(-561,33)
(-535,33)
(-535,41)
(-615,41)
(-615,-150)
(-561,-150)
minNode is: (-615,41)
type2:horizontal condition 1
type1:curNode is (-443,126)
in minNode() now the loop is: 
(-443,126)
(-443,48)
(-383,48)
(-383,181)
(-402,181)
(-402,281)
(-552,281)
(-552,126)
minNode is: (-383,181)
type1:vertical condition 1
type3:curNode is (-402,181)
in minNode() now the loop is: 
(-402,181)
(-402,281)
(-552,281)
(-552,126)
(-383,126)
(-383,181)
minNode is: (-552,126)
type3:horizontal condition 1
type2:curNode is (-402,342)
in minNode() now the loop is: 
(-402,342)
(-386,342)
(-386,452)
(-500,452)
(-500,281)
(-402,281)
minNode is: (-500,452)
type2:vertical condition 1
type1:curNode is (-382,407)
in minNode() now the loop is: 
(-382,407)
(-382,340)
(-342,340)
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,470)
(-478,470)
(-478,407)
minNode is: (-261,470)
type1:horizontal condition 1
type2:curNode is (-342,369)
in minNode() now the loop is: 
(-342,369)
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,470)
(-382,470)
(-382,340)
(-342,340)
minNode is: (-382,470)
type2:vertical condition 1
type1:curNode is (-293,369)
in minNode() now the loop is: 
(-293,369)
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,470)
(-382,470)
(-382,369)
minNode is: (-261,470)
type1:vertical condition 1
type4:curNode is (-293,311)
in minNode() now the loop is: 
(-293,311)
(-313,311)
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,369)
(-293,369)
minNode is: (-261,264)
type4:vertical condition 1
type4:curNode is (-313,166)
in minNode() now the loop is: 
(-313,166)
(-328,166)
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,311)
(-313,311)
minNode is: (-303,23)
type4:vertical condition 1
type4:curNode is (-328,45)
in minNode() now the loop is: 
(-328,45)
(-376,45)
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,166)
(-328,166)
minNode is: (-303,23)
type4:vertical condition 1
type4:curNode is (-376,-486)
in minNode() now the loop is: 
(-376,-486)
(-432,-486)
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
minNode is: (-331,-597)
type4:vertical condition 1
type4:curNode is (-432,-496)
in minNode() now the loop is: 
(-432,-496)
(-438,-496)
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-486)
(-432,-486)
minNode is: (-331,-597)
type4:vertical condition 1
type4:curNode is (-438,-557)
in minNode() now the loop is: 
(-438,-557)
(-578,-557)
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-597)
(-331,-597)
(-331,-496)
(-438,-496)
minNode is: (-394,-597)
type4:complex condition 1
type4:curNode is (-578,-577)
in minNode() now the loop is: 
(-578,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-557)
(-578,-557)
minNode is: (-499,-700)
type4:horizontal condition 1
type3:curNode is (-669,-577)
in minNode() now the loop is: 
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-578,-700)
(-578,-577)
minNode is: (-735,-593)
type3:vertical condition 1
type1:curNode is (-735,-519)
in minNode() now the loop is: 
(-735,-519)
(-735,-577)
(-669,-577)
(-669,-477)
(-760,-477)
(-760,-519)
minNode is: (-669,-477)
type1:horizontal condition 1
type4:curNode is (-735,-593)
in minNode() now the loop is: 
(-735,-593)
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-600,-704)
(-600,-700)
(-578,-700)
(-578,-577)
(-735,-577)
minNode is: (-600,-704)
type4:horizontal condition 1
type3:curNode is (-865,-593)
in minNode() now the loop is: 
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-728)
(-877,-728)
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-735,-704)
(-735,-593)
minNode is: (-896,-728)
type3:vertical condition 1
type2:curNode is (-877,-656)
in minNode() now the loop is: 
(-877,-656)
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-735,-704)
(-735,-593)
(-896,-593)
(-896,-728)
(-877,-728)
minNode is: (-896,-593)
type2:vertical condition 1
type1:curNode is (-845,-656)
in minNode() now the loop is: 
(-845,-656)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
(-652,-775)
(-804,-775)
(-804,-704)
(-735,-704)
(-735,-593)
(-896,-593)
(-896,-656)
minNode is: (-735,-593)
type1:horizontal condition 1
type4:curNode is (-652,-775)
in minNode() now the loop is: 
(-652,-775)
(-804,-775)
(-804,-704)
(-735,-704)
(-735,-593)
(-845,-593)
(-845,-844)
(-646,-844)
(-646,-762)
(-652,-762)
minNode is: (-646,-844)
type4:vertical condition 1
type3:curNode is (-804,-775)
in minNode() now the loop is: 
(-804,-775)
(-804,-704)
(-735,-704)
(-735,-593)
(-845,-593)
(-845,-844)
(-646,-844)
(-646,-775)
minNode is: (-845,-844)
type3:vertical condition 1
type2:curNode is (-804,-704)
in minNode() now the loop is: 
(-804,-704)
(-735,-704)
(-735,-593)
(-845,-593)
(-845,-775)
(-804,-775)
minNode is: (-845,-593)
type2:vertical condition 1
type2:curNode is (-600,-700)
in minNode() now the loop is: 
(-600,-700)
(-578,-700)
(-578,-577)
(-735,-577)
(-735,-704)
(-600,-704)
minNode is: (-735,-577)
type2:horizontal condition 1
type1:curNode is (-499,-700)
in minNode() now the loop is: 
(-499,-700)
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-658)
(-394,-658)
(-394,-557)
(-578,-557)
(-578,-700)
minNode is: (-414,-658)
type1:vertical condition 1
type4:curNode is (-499,-721)
in minNode() now the loop is: 
(-499,-721)
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-700)
(-499,-700)
minNode is: (-414,-786)
type4:vertical condition 1
type1:curNode is (-530,-735)
in minNode() now the loop is: 
(-530,-735)
(-530,-847)
(-443,-847)
(-443,-786)
(-414,-786)
(-414,-721)
(-631,-721)
(-631,-735)
minNode is: (-414,-721)
type1:horizontal condition 1
type2:curNode is (-443,-786)
in minNode() now the loop is: 
(-443,-786)
(-414,-786)
(-414,-721)
(-530,-721)
(-530,-847)
(-443,-847)
minNode is: (-530,-721)
type2:horizontal condition 1
type2:curNode is (-414,-658)
in minNode() now the loop is: 
(-414,-658)
(-394,-658)
(-394,-557)
(-578,-557)
(-578,-700)
(-414,-700)
minNode is: (-578,-557)
type2:horizontal condition 1
type2:curNode is (-331,-474)
in minNode() now the loop is: 
(-331,-474)
(-326,-474)
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-486)
(-331,-486)
minNode is: (-376,45)
type2:vertical condition 1
type2:curNode is (-326,-292)
in minNode() now the loop is: 
(-326,-292)
(-279,-292)
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-474)
(-326,-474)
minNode is: (-376,45)
type2:vertical condition 1
type2:curNode is (-279,-236)
in minNode() now the loop is: 
(-279,-236)
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-292)
(-279,-292)
minNode is: (-347,-185)
type2:horizontal condition 1
type1:curNode is (-231,-236)
in minNode() now the loop is: 
(-231,-236)
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-279,-185)
(-279,-236)
minNode is: (65,-185)
type1:horizontal condition 1
type4:curNode is (-231,-419)
in minNode() now the loop is: 
(-231,-419)
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
minNode is: (-160,-500)
type4:vertical condition 1
type3:curNode is (-270,-419)
in minNode() now the loop is: 
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-526)
(-284,-526)
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-419)
minNode is: (-316,-526)
type3:vertical condition 1
type2:curNode is (-284,-522)
in minNode() now the loop is: 
(-284,-522)
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-419)
(-316,-419)
(-316,-526)
(-284,-526)
minNode is: (-316,-419)
type2:vertical condition 1
type1:curNode is (-215,-522)
in minNode() now the loop is: 
(-215,-522)
(-215,-540)
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-160,-500)
(-160,-419)
(-316,-419)
(-316,-522)
minNode is: (-160,-500)
type1:complex condition 1
type1:curNode is (-188,-540)
in minNode() now the loop is: 
(-188,-540)
(-188,-584)
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-215,-500)
(-215,-540)
minNode is: (-90,-500)
type1:horizontal condition 1
type1:curNode is (-178,-584)
in minNode() now the loop is: 
(-178,-584)
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-188,-500)
(-188,-584)
minNode is: (-90,-500)
type1:horizontal condition 1
type4:curNode is (-178,-621)
in minNode() now the loop is: 
(-178,-621)
(-262,-621)
(-262,-636)
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-178,-500)
minNode is: (-156,-636)
type4:horizontal condition 1
type1:curNode is (-156,-636)
in minNode() now the loop is: 
(-156,-636)
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-90,-636)
(-90,-500)
(-178,-500)
(-178,-636)
minNode is: (-90,-636)
type1:complex condition 2
type4:curNode is (-156,-646)
in minNode() now the loop is: 
(-156,-646)
(-275,-646)
(-275,-689)
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-156,-636)
minNode is: (-143,-689)
type4:horizontal condition 1
type1:curNode is (-143,-689)
in minNode() now the loop is: 
(-143,-689)
(-143,-719)
(-85,-719)
(-85,-698)
(-14,-698)
(-14,-636)
(-156,-636)
(-156,-689)
minNode is: (-14,-636)
type1:horizontal condition 1
type2:curNode is (-85,-698)
in minNode() now the loop is: 
(-85,-698)
(-14,-698)
(-14,-636)
(-143,-636)
(-143,-719)
(-85,-719)
minNode is: (-143,-636)
type2:vertical condition 1
type2:curNode is (-160,-392)
in minNode() now the loop is: 
(-160,-392)
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-419)
(-160,-419)
minNode is: (-161,-372)
type2:horizontal condition 1
type1:curNode is (-107,-392)
in minNode() now the loop is: 
(-107,-392)
(-107,-443)
(-25,-443)
(-25,-372)
(-160,-372)
(-160,-392)
minNode is: (-25,-372)
type1:horizontal condition 1
type3:curNode is (-161,-372)
in minNode() now the loop is: 
(-161,-372)
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-419)
(-160,-419)
(-160,-372)
minNode is: (-231,-419)
type3:horizontal condition 1
type2:curNode is (-161,-359)
in minNode() now the loop is: 
(-161,-359)
(-106,-359)
(-106,-344)
(21,-344)
(21,-339)
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-419)
(-161,-419)
minNode is: (-177,-339)
type2:horizontal condition 1
type2:curNode is (-106,-344)
in minNode() now the loop is: 
(-106,-344)
(21,-344)
(21,-339)
(-161,-339)
(-161,-359)
(-106,-359)
minNode is: (-161,-339)
type2:horizontal condition 1
type3:curNode is (-177,-339)
in minNode() now the loop is: 
(-177,-339)
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-419)
(-161,-419)
(-161,-339)
minNode is: (-231,-419)
type3:vertical condition 1
type2:curNode is (-177,-281)
in minNode() now the loop is: 
(-177,-281)
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-339)
(-177,-339)
minNode is: (-231,-185)
type2:vertical condition 1
type3:curNode is (-170,-280)
in minNode() now the loop is: 
(-170,-280)
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-281)
(-69,-281)
(-69,-280)
minNode is: (-231,-281)
type3:horizontal condition 1
type2:curNode is (-170,-275)
in minNode() now the loop is: 
(-170,-275)
(108,-275)
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-281)
(-170,-281)
minNode is: (-231,-185)
type2:vertical condition 1
type2:curNode is (108,-229)
in minNode() now the loop is: 
(108,-229)
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-275)
(108,-275)
minNode is: (93,-170)
type2:vertical condition 1
type1:curNode is (117,-229)
in minNode() now the loop is: 
(117,-229)
(117,-293)
(204,-293)
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(93,-170)
(93,-229)
minNode is: (278,-170)
type1:horizontal condition 1
type2:curNode is (204,-289)
in minNode() now the loop is: 
(204,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(117,-170)
(117,-293)
(204,-293)
minNode is: (117,-170)
type2:vertical condition 1
type1:curNode is (260,-289)
in minNode() now the loop is: 
(260,-289)
(260,-434)
(343,-434)
(343,-423)
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-170)
(117,-170)
(117,-289)
minNode is: (278,-170)
type1:vertical condition 1
type3:curNode is (331,-423)
in minNode() now the loop is: 
(331,-423)
(331,-333)
(323,-333)
(323,-306)
(278,-306)
(278,-289)
(260,-289)
(260,-434)
(343,-434)
(343,-423)
minNode is: (260,-434)
type3:horizontal condition 1
type3:curNode is (323,-333)
in minNode() now the loop is: 
(323,-333)
(323,-306)
(278,-306)
(278,-289)
(260,-289)
(260,-434)
(331,-434)
(331,-333)
minNode is: (260,-434)
type3:vertical condition 1
type3:curNode is (278,-306)
in minNode() now the loop is: 
(278,-306)
(278,-289)
(260,-289)
(260,-333)
(323,-333)
(323,-306)
minNode is: (260,-333)
type3:vertical condition 1
type4:curNode is (93,-261)
in minNode() now the loop is: 
(93,-261)
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-275)
(108,-275)
(108,-229)
(93,-229)
minNode is: (108,-275)
type4:horizontal condition 1
type3:curNode is (59,-261)
in minNode() now the loop is: 
(59,-261)
(59,-232)
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-275)
(93,-275)
(93,-261)
minNode is: (-231,-275)
type3:horizontal condition 1
type3:curNode is (28,-232)
in minNode() now the loop is: 
(28,-232)
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-275)
(59,-275)
(59,-232)
minNode is: (-231,-275)
type3:horizontal condition 1
type2:curNode is (28,-199)
in minNode() now the loop is: 
(28,-199)
(65,-199)
(65,-185)
(-231,-185)
(-231,-275)
(28,-275)
minNode is: (-231,-185)
type2:horizontal condition 1
type3:curNode is (-347,-185)
in minNode() now the loop is: 
(-347,-185)
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-292)
(-279,-292)
(-279,-185)
minNode is: (-376,-292)
type3:vertical condition 1
type2:curNode is (-347,-40)
in minNode() now the loop is: 
(-347,-40)
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-185)
(-347,-185)
minNode is: (-376,45)
type2:vertical condition 1
type1:curNode is (-327,-40)
in minNode() now the loop is: 
(-327,-40)
(-327,-70)
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-376,45)
(-376,-40)
minNode is: (-303,45)
type1:horizontal condition 1
type1:curNode is (-234,-70)
in minNode() now the loop is: 
(-234,-70)
(-234,-129)
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-303,23)
(-303,45)
(-327,45)
(-327,-70)
minNode is: (-125,23)
type1:horizontal condition 1
type1:curNode is (-131,-129)
in minNode() now the loop is: 
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
(-54,-129)
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-234,23)
(-234,-129)
minNode is: (-54,-129)
type1:complex condition 2
type2:curNode is (-54,57)
in minNode() now the loop is: 
(-54,57)
(-4,57)
(-4,75)
(-69,75)
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-234,23)
(-234,-129)
(-54,-129)
minNode is: (-69,75)
type2:vertical condition 1
type4:curNode is (-69,-25)
in minNode() now the loop is: 
(-69,-25)
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-234,23)
(-234,-129)
(-54,-129)
(-54,57)
(-69,57)
minNode is: (-54,-129)
type4:vertical condition 1
type3:curNode is (-75,-25)
in minNode() now the loop is: 
(-75,-25)
(-75,0)
(-125,0)
(-125,23)
(-234,23)
(-234,-129)
(-54,-129)
(-54,-25)
minNode is: (-234,-129)
type3:horizontal condition 1
type3:curNode is (-125,0)
in minNode() now the loop is: 
(-125,0)
(-125,23)
(-234,23)
(-234,-129)
(-75,-129)
(-75,0)
minNode is: (-234,-129)
type3:vertical condition 1
type3:curNode is (-303,23)
in minNode() now the loop is: 
(-303,23)
(-303,45)
(-327,45)
(-327,-70)
(-234,-70)
(-234,23)
minNode is: (-327,-70)
type3:vertical condition 1
type2:curNode is (-303,177)
in minNode() now the loop is: 
(-303,177)
(-273,177)
(-273,181)
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,311)
(-313,311)
(-313,166)
(-303,166)
minNode is: (-313,311)
type2:vertical condition 1
type3:curNode is (-296,181)
in minNode() now the loop is: 
(-296,181)
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,311)
(-313,311)
(-313,177)
(-273,177)
(-273,181)
minNode is: (-313,177)
type3:horizontal condition 1
type2:curNode is (-296,216)
in minNode() now the loop is: 
(-296,216)
(-264,216)
(-264,264)
(-261,264)
(-261,311)
(-313,311)
(-313,177)
(-296,177)
minNode is: (-313,311)
type2:vertical condition 1
type2:curNode is (-264,264)
in minNode() now the loop is: 
(-264,264)
(-261,264)
(-261,311)
(-313,311)
(-313,216)
(-264,216)
minNode is: (-313,311)
type2:horizontal condition 1
type1:curNode is (-121,264)
in minNode() now the loop is: 
(-121,264)
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
(-187,343)
(-187,264)
minNode is: (141,343)
type1:horizontal condition 1
type4:curNode is (-121,211)
in minNode() now the loop is: 
(-121,211)
(-220,211)
(-220,140)
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
(-121,343)
minNode is: (-90,140)
type4:horizontal condition 1
type1:curNode is (-90,140)
in minNode() now the loop is: 
(-90,140)
(-90,79)
(-29,79)
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
(-121,343)
(-121,140)
minNode is: (97,285)
type1:vertical condition 1
type2:curNode is (-29,92)
in minNode() now the loop is: 
(-29,92)
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,140)
(-90,140)
(-90,79)
(-29,79)
minNode is: (-90,140)
type2:horizontal condition 1
type1:curNode is (89,92)
in minNode() now the loop is: 
(89,92)
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,140)
(-29,140)
(-29,92)
minNode is: (97,140)
type1:vertical condition 1
type4:curNode is (89,43)
in minNode() now the loop is: 
(89,43)
(22,43)
(22,-58)
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,92)
(89,92)
minNode is: (97,-28)
type4:vertical condition 1
type1:curNode is (119,-58)
in minNode() now the loop is: 
(119,-58)
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(97,-28)
(97,43)
(22,43)
(22,-58)
minNode is: (177,-28)
type1:horizontal condition 1
type4:curNode is (119,-75)
in minNode() now the loop is: 
(119,-75)
(55,-75)
(55,-76)
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(119,-28)
minNode is: (171,-76)
type4:horizontal condition 1
type1:curNode is (171,-76)
in minNode() now the loop is: 
(171,-76)
(171,-96)
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(119,-28)
(119,-76)
minNode is: (177,-28)
type1:horizontal condition 1
type1:curNode is (281,-96)
in minNode() now the loop is: 
(281,-96)
(281,-115)
(299,-115)
(299,-40)
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(171,-28)
(171,-96)
minNode is: (299,-40)
type1:vertical condition 1
type3:curNode is (282,-40)
in minNode() now the loop is: 
(282,-40)
(282,65)
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(171,-28)
(171,-96)
(299,-96)
(299,-40)
minNode is: (171,-96)
type3:horizontal condition 1
type3:curNode is (240,65)
in minNode() now the loop is: 
(240,65)
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,-28)
(171,-28)
(171,-96)
(282,-96)
(282,65)
minNode is: (177,-28)
type3:vertical condition 1
type2:curNode is (240,255)
in minNode() now the loop is: 
(240,255)
(289,255)
(289,314)
(223,314)
(223,125)
(221,125)
(221,166)
(177,166)
(177,65)
(240,65)
minNode is: (223,314)
type2:vertical condition 1
type4:curNode is (223,125)
in minNode() now the loop is: 
(223,125)
(221,125)
(221,166)
(177,166)
(177,65)
(240,65)
(240,255)
(223,255)
minNode is: (240,65)
type4:vertical condition 1
type3:curNode is (221,125)
in minNode() now the loop is: 
(221,125)
(221,166)
(177,166)
(177,65)
(240,65)
(240,125)
minNode is: (177,65)
type3:vertical condition 1
type4:curNode is (177,-28)
in minNode() now the loop is: 
(177,-28)
(171,-28)
(171,-96)
(282,-96)
(282,65)
(177,65)
minNode is: (282,-96)
type4:horizontal condition 1
type3:curNode is (97,-28)
in minNode() now the loop is: 
(97,-28)
(97,43)
(22,43)
(22,-58)
(119,-58)
(119,-28)
minNode is: (22,-58)
type3:horizontal condition 1
type2:curNode is (97,285)
in minNode() now the loop is: 
(97,285)
(130,285)
(130,260)
(141,260)
(141,343)
(-121,343)
(-121,140)
(97,140)
minNode is: (-121,343)
type2:horizontal condition 1
type1:curNode is (130,285)
in minNode() now the loop is: 
(130,285)
(130,260)
(141,260)
(141,343)
(97,343)
(97,285)
minNode is: (141,343)
type1:vertical condition 1
type1:curNode is (199,332)
in minNode() now the loop is: 
(199,332)
(199,287)
(216,287)
(216,504)
(230,504)
(230,535)
(42,535)
(42,332)
minNode is: (216,504)
type1:vertical condition 1
type2:curNode is (216,504)
in minNode() now the loop is: 
(216,504)
(230,504)
(230,535)
(42,535)
(42,332)
(216,332)
minNode is: (42,535)
type2:horizontal condition 1
type1:curNode is (289,504)
in minNode() now the loop is: 
(289,504)
(289,469)
(364,469)
(364,521)
(230,521)
(230,504)
minNode is: (364,521)
type1:horizontal condition 1
type1:curNode is (432,423)
in minNode() now the loop is: 
(432,423)
(432,421)
(498,421)
(498,511)
(388,511)
(388,423)
minNode is: (498,511)
type1:vertical condition 1
type1:curNode is (553,293)
in minNode() now the loop is: 
(553,293)
(553,265)
(558,265)
(558,359)
(515,359)
(515,293)
minNode is: (558,359)
type1:vertical condition 1
type4:curNode is (553,254)
in minNode() now the loop is: 
(553,254)
(531,254)
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(667,175)
(667,177)
(670,177)
(670,265)
(553,265)
minNode is: (667,175)
type4:horizontal condition 1
type4:curNode is (531,248)
in minNode() now the loop is: 
(531,248)
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(553,175)
(553,254)
(531,254)
minNode is: (553,175)
type4:vertical condition 1
type3:curNode is (459,248)
in minNode() now the loop is: 
(459,248)
(459,276)
(416,276)
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(553,175)
(553,248)
minNode is: (416,227)
type3:vertical condition 1
type4:curNode is (416,227)
in minNode() now the loop is: 
(416,227)
(402,227)
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,175)
(553,175)
(553,248)
(416,248)
minNode is: (469,175)
type4:complex condition 1
type4:curNode is (402,57)
in minNode() now the loop is: 
(402,57)
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,-3)
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
minNode is: (406,-3)
type4:complex condition 1
type3:curNode is (345,57)
in minNode() now the loop is: 
(345,57)
(345,64)
(289,64)
(289,24)
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,57)
minNode is: (289,24)
type3:horizontal condition 1
type1:curNode is (350,24)
in minNode() now the loop is: 
(350,24)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,57)
(345,57)
(345,24)
minNode is: (406,57)
type1:horizontal condition 1
type4:curNode is (350,-2)
in minNode() now the loop is: 
(350,-2)
(316,-2)
(316,-18)
(340,-18)
(340,-15)
(406,-15)
(406,57)
(350,57)
minNode is: (406,-15)
type4:horizontal condition 1
type2:curNode is (340,-15)
in minNode() now the loop is: 
(340,-15)
(350,-15)
(350,-2)
(316,-2)
(316,-18)
(340,-18)
minNode is: (316,-2)
type2:horizontal condition 1
type1:curNode is (431,-3)
in minNode() now the loop is: 
(431,-3)
(431,-18)
(517,-18)
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
(402,-3)
minNode is: (517,28)
type1:vertical condition 1
type2:curNode is (517,28)
in minNode() now the loop is: 
(517,28)
(601,28)
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
(402,-3)
(517,-3)
minNode is: (516,88)
type2:horizontal condition 1
type2:curNode is (601,61)
in minNode() now the loop is: 
(601,61)
(683,61)
(683,91)
(674,91)
(674,90)
(618,90)
(618,88)
(517,88)
(517,28)
(601,28)
minNode is: (517,88)
type2:horizontal condition 1
type4:curNode is (674,90)
in minNode() now the loop is: 
(674,90)
(618,90)
(618,88)
(601,88)
(601,61)
(683,61)
(683,91)
(674,91)
minNode is: (683,61)
type4:vertical condition 1
type4:curNode is (618,88)
in minNode() now the loop is: 
(618,88)
(601,88)
(601,61)
(683,61)
(683,90)
(618,90)
minNode is: (683,61)
type4:horizontal condition 1
type3:curNode is (516,88)
in minNode() now the loop is: 
(516,88)
(516,98)
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
(402,-3)
(517,-3)
(517,88)
minNode is: (402,-3)
type3:horizontal condition 1
type3:curNode is (429,98)
in minNode() now the loop is: 
(429,98)
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
(402,-3)
(516,-3)
(516,98)
minNode is: (402,-3)
type3:vertical condition 1
type2:curNode is (429,124)
in minNode() now the loop is: 
(429,124)
(571,124)
(571,142)
(562,142)
(562,139)
(469,139)
(469,227)
(402,227)
(402,98)
(429,98)
minNode is: (402,227)
type2:vertical condition 1
type4:curNode is (562,139)
in minNode() now the loop is: 
(562,139)
(469,139)
(469,227)
(402,227)
(402,124)
(571,124)
(571,142)
(562,142)
minNode is: (571,124)
type4:vertical condition 1
type3:curNode is (469,139)
in minNode() now the loop is: 
(469,139)
(469,227)
(402,227)
(402,124)
(571,124)
(571,139)
minNode is: (402,124)
type3:horizontal condition 1
type2:curNode is (667,177)
in minNode() now the loop is: 
(667,177)
(670,177)
(670,265)
(553,265)
(553,175)
(667,175)
minNode is: (553,265)
type2:horizontal condition 1
type1:curNode is (805,177)
in minNode() now the loop is: 
(805,177)
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(707,432)
(707,177)
minNode is: (847,299)
type1:vertical condition 1
type4:curNode is (805,80)
in minNode() now the loop is: 
(805,80)
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,177)
(805,177)
minNode is: (867,77)
type4:horizontal condition 1
type3:curNode is (753,80)
in minNode() now the loop is: 
(753,80)
(753,116)
(712,116)
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(805,77)
(805,80)
minNode is: (712,-19)
type3:vertical condition 1
type4:curNode is (712,-19)
in minNode() now the loop is: 
(712,-19)
(426,-19)
(426,-66)
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(805,77)
(805,80)
(712,80)
minNode is: (791,-74)
type4:horizontal condition 1
type1:curNode is (535,-66)
in minNode() now the loop is: 
(535,-66)
(535,-161)
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(712,-74)
(712,-19)
(426,-19)
(426,-66)
minNode is: (712,-19)
type1:horizontal condition 1
type1:curNode is (580,-161)
in minNode() now the loop is: 
(580,-161)
(580,-241)
(610,-241)
(610,-252)
(645,-252)
(645,-74)
(712,-74)
(712,-19)
(535,-19)
(535,-161)
minNode is: (645,-74)
type1:vertical condition 1
type1:curNode is (610,-241)
in minNode() now the loop is: 
(610,-241)
(610,-252)
(645,-252)
(645,-161)
(580,-161)
(580,-241)
minNode is: (645,-161)
type1:vertical condition 1
type2:curNode is (645,-74)
in minNode() now the loop is: 
(645,-74)
(712,-74)
(712,-19)
(535,-19)
(535,-161)
(645,-161)
minNode is: (535,-19)
type2:horizontal condition 1
type1:curNode is (791,-74)
in minNode() now the loop is: 
(791,-74)
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(716,-72)
(716,-70)
(767,-70)
(767,77)
(805,77)
(805,80)
(712,80)
(712,-74)
minNode is: (792,-72)
type1:horizontal condition 1
type4:curNode is (791,-188)
in minNode() now the loop is: 
(791,-188)
(773,-188)
(773,-346)
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-184)
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(791,-72)
minNode is: (854,-304)
type4:vertical condition 1
type1:curNode is (803,-346)
in minNode() now the loop is: 
(803,-346)
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-304)
(854,-304)
(854,-188)
(773,-188)
(773,-346)
minNode is: (820,-304)
type1:vertical condition 1
type4:curNode is (803,-347)
in minNode() now the loop is: 
(803,-347)
(750,-347)
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-346)
(803,-346)
minNode is: (820,-433)
type4:vertical condition 1
type4:curNode is (750,-409)
in minNode() now the loop is: 
(750,-409)
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-347)
(750,-347)
minNode is: (820,-433)
type4:vertical condition 1
type3:curNode is (717,-409)
in minNode() now the loop is: 
(717,-409)
(717,-81)
(713,-81)
(713,-483)
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-409)
minNode is: (713,-483)
type3:vertical condition 1
type1:curNode is (763,-483)
in minNode() now the loop is: 
(763,-483)
(763,-562)
(767,-562)
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-409)
(713,-409)
(713,-483)
minNode is: (767,-472)
type1:vertical condition 1
type2:curNode is (767,-472)
in minNode() now the loop is: 
(767,-472)
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-409)
(713,-409)
(713,-483)
(767,-483)
minNode is: (713,-409)
type2:vertical condition 1
type1:curNode is (855,-472)
in minNode() now the loop is: 
(855,-472)
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-365)
(842,-365)
(842,-428)
(853,-428)
(853,-433)
(820,-433)
(820,-409)
(713,-409)
(713,-472)
minNode is: (905,-365)
type1:vertical condition 1
type4:curNode is (855,-645)
in minNode() now the loop is: 
(855,-645)
(798,-645)
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(927,-675)
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-472)
(855,-472)
minNode is: (927,-675)
type4:horizontal condition 1
type4:curNode is (798,-671)
in minNode() now the loop is: 
(798,-671)
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(855,-675)
(855,-645)
(798,-645)
minNode is: (855,-675)
type4:horizontal condition 1
type3:curNode is (755,-671)
in minNode() now the loop is: 
(755,-671)
(755,-655)
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(798,-675)
(798,-671)
minNode is: (653,-733)
type3:horizontal condition 1
type3:curNode is (744,-655)
in minNode() now the loop is: 
(744,-655)
(744,-618)
(679,-618)
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(755,-733)
(755,-655)
minNode is: (679,-711)
type3:vertical condition 1
type4:curNode is (679,-711)
in minNode() now the loop is: 
(679,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(755,-733)
(755,-655)
(679,-655)
minNode is: (755,-733)
type4:horizontal condition 1
type3:curNode is (650,-711)
in minNode() now the loop is: 
(650,-711)
(650,-655)
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(679,-733)
(679,-711)
minNode is: (630,-809)
type3:vertical condition 1
type3:curNode is (499,-655)
in minNode() now the loop is: 
(499,-655)
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-711)
(650,-711)
(650,-655)
minNode is: (121,-675)
type3:horizontal condition 1
type2:curNode is (499,-568)
in minNode() now the loop is: 
(499,-568)
(644,-568)
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(454,-551)
(454,-586)
(121,-586)
(121,-675)
(499,-675)
minNode is: (454,-551)
type2:horizontal condition 1
type2:curNode is (644,-553)
in minNode() now the loop is: 
(644,-553)
(691,-553)
(691,-379)
(668,-379)
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-551)
(499,-551)
(499,-568)
(644,-568)
minNode is: (555,-551)
type2:complex condition 1
type4:curNode is (668,-406)
in minNode() now the loop is: 
(668,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-553)
(691,-553)
(691,-379)
(668,-379)
minNode is: (691,-553)
type4:vertical condition 1
type3:curNode is (494,-406)
in minNode() now the loop is: 
(494,-406)
(494,-303)
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-553)
(691,-553)
(691,-406)
minNode is: (472,-407)
type3:vertical condition 1
type3:curNode is (438,-303)
in minNode() now the loop is: 
(438,-303)
(438,-297)
(358,-297)
(358,-347)
(469,-347)
(469,-400)
(472,-400)
(472,-406)
(494,-406)
(494,-303)
minNode is: (358,-347)
type3:horizontal condition 1
type1:curNode is (469,-347)
in minNode() now the loop is: 
(469,-347)
(469,-400)
(472,-400)
(472,-406)
(494,-406)
(494,-303)
(438,-303)
(438,-347)
minNode is: (494,-303)
type1:vertical condition 1
type1:curNode is (472,-400)
in minNode() now the loop is: 
(472,-400)
(472,-406)
(494,-406)
(494,-347)
(469,-347)
(469,-400)
minNode is: (494,-347)
type1:vertical condition 1
type4:curNode is (472,-407)
in minNode() now the loop is: 
(472,-407)
(466,-407)
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(555,-480)
(555,-553)
(691,-553)
(691,-406)
(472,-406)
minNode is: (524,-480)
type4:complex condition 1
type4:curNode is (466,-480)
in minNode() now the loop is: 
(466,-480)
(462,-480)
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-407)
(466,-407)
minNode is: (524,-548)
type4:vertical condition 1
type4:curNode is (462,-513)
in minNode() now the loop is: 
(462,-513)
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(524,-548)
(524,-480)
(462,-480)
minNode is: (524,-548)
type4:horizontal condition 1
type3:curNode is (387,-513)
in minNode() now the loop is: 
(387,-513)
(387,-442)
(345,-442)
(345,-449)
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(440,-515)
(440,-548)
(462,-548)
(462,-513)
minNode is: (316,-515)
type3:horizontal condition 1
type1:curNode is (383,-449)
in minNode() now the loop is: 
(383,-449)
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(387,-515)
(387,-442)
(345,-442)
(345,-449)
minNode is: (387,-442)
type1:vertical condition 1
type4:curNode is (383,-493)
in minNode() now the loop is: 
(383,-493)
(280,-493)
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(387,-515)
(387,-449)
(383,-449)
minNode is: (387,-515)
type4:vertical condition 1
type4:curNode is (280,-497)
in minNode() now the loop is: 
(280,-497)
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(316,-537)
(316,-515)
(387,-515)
(387,-493)
(280,-493)
minNode is: (316,-537)
type4:horizontal condition 1
type3:curNode is (103,-497)
in minNode() now the loop is: 
(103,-497)
(103,-450)
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(280,-537)
(280,-497)
minNode is: (39,-545)
type3:horizontal condition 1
type3:curNode is (68,-450)
in minNode() now the loop is: 
(68,-450)
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(103,-545)
(103,-450)
minNode is: (54,-514)
type3:vertical condition 1
type2:curNode is (68,-390)
in minNode() now the loop is: 
(68,-390)
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-450)
(68,-450)
minNode is: (54,-302)
type2:vertical condition 1
type1:curNode is (165,-390)
in minNode() now the loop is: 
(165,-390)
(165,-441)
(182,-441)
(182,-295)
(-148,-295)
(-148,-302)
(54,-302)
(54,-390)
minNode is: (182,-295)
type1:vertical condition 1
type1:curNode is (54,-302)
in minNode() now the loop is: 
(54,-302)
(54,-390)
(182,-390)
(182,-295)
(-148,-295)
(-148,-302)
minNode is: (182,-295)
type1:horizontal condition 1
type4:curNode is (54,-514)
in minNode() now the loop is: 
(54,-514)
(-19,-514)
(-19,-542)
(39,-542)
(39,-545)
(103,-545)
(103,-450)
(54,-450)
minNode is: (103,-545)
type4:horizontal condition 1
type1:curNode is (39,-542)
in minNode() now the loop is: 
(39,-542)
(39,-545)
(54,-545)
(54,-514)
(-19,-514)
(-19,-542)
minNode is: (54,-514)
type1:vertical condition 1
type1:curNode is (158,-545)
in minNode() now the loop is: 
(158,-545)
(158,-556)
(215,-556)
(215,-547)
(169,-547)
(169,-537)
(280,-537)
(280,-497)
(103,-497)
(103,-545)
minNode is: (169,-537)
type1:vertical condition 1
type3:curNode is (169,-547)
in minNode() now the loop is: 
(169,-547)
(169,-545)
(158,-545)
(158,-556)
(215,-556)
(215,-547)
minNode is: (158,-556)
type3:horizontal condition 1
type2:curNode is (169,-537)
in minNode() now the loop is: 
(169,-537)
(280,-537)
(280,-497)
(103,-497)
(103,-545)
(169,-545)
minNode is: (103,-497)
type2:horizontal condition 1
type2:curNode is (316,-515)
in minNode() now the loop is: 
(316,-515)
(387,-515)
(387,-493)
(280,-493)
(280,-537)
(316,-537)
minNode is: (280,-493)
type2:horizontal condition 1
type1:curNode is (440,-515)
in minNode() now the loop is: 
(440,-515)
(440,-548)
(462,-548)
(462,-513)
(387,-513)
(387,-515)
minNode is: (462,-513)
type1:horizontal condition 1
type1:curNode is (555,-480)
in minNode() now the loop is: 
(555,-480)
(555,-553)
(691,-553)
(691,-406)
(472,-406)
(472,-480)
minNode is: (691,-406)
type1:horizontal condition 1
type4:curNode is (454,-586)
in minNode() now the loop is: 
(454,-586)
(121,-586)
(121,-675)
(499,-675)
(499,-551)
(454,-551)
minNode is: (499,-675)
type4:vertical condition 1
type1:curNode is (514,-675)
in minNode() now the loop is: 
(514,-675)
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-711)
(650,-711)
(650,-655)
(499,-655)
(499,-675)
minNode is: (650,-655)
type1:horizontal condition 1
type4:curNode is (514,-713)
in minNode() now the loop is: 
(514,-713)
(394,-713)
(394,-722)
(604,-722)
(604,-697)
(630,-697)
(630,-711)
(650,-711)
(650,-655)
(514,-655)
minNode is: (604,-722)
type4:horizontal condition 1
type2:curNode is (604,-697)
in minNode() now the loop is: 
(604,-697)
(630,-697)
(630,-711)
(650,-711)
(650,-655)
(514,-655)
(514,-722)
(604,-722)
minNode is: (514,-655)
type2:horizontal condition 1
type1:curNode is (630,-697)
in minNode() now the loop is: 
(630,-697)
(630,-711)
(650,-711)
(650,-655)
(604,-655)
(604,-697)
minNode is: (650,-655)
type1:vertical condition 1
type4:curNode is (630,-809)
in minNode() now the loop is: 
(630,-809)
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(653,-820)
(653,-733)
(679,-733)
(679,-711)
(630,-711)
minNode is: (653,-820)
type4:horizontal condition 1
type3:curNode is (607,-809)
in minNode() now the loop is: 
(607,-809)
(607,-768)
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(630,-820)
(630,-809)
minNode is: (521,-820)
type3:horizontal condition 1
type3:curNode is (246,-768)
in minNode() now the loop is: 
(246,-768)
(246,-736)
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(367,-832)
(367,-782)
(521,-782)
(521,-820)
(607,-820)
(607,-768)
minNode is: (213,-832)
type3:horizontal condition 1
type3:curNode is (119,-736)
in minNode() now the loop is: 
(119,-736)
(119,-722)
(42,-722)
(42,-751)
(118,-751)
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(246,-832)
(246,-736)
minNode is: (118,-751)
type3:complex condition 1
type4:curNode is (118,-815)
in minNode() now the loop is: 
(118,-815)
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(213,-884)
(213,-832)
(246,-832)
(246,-736)
(118,-736)
minNode is: (213,-884)
type4:horizontal condition 1
type3:curNode is (21,-815)
in minNode() now the loop is: 
(21,-815)
(21,-792)
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(118,-884)
(118,-815)
minNode is: (-61,-884)
type3:horizontal condition 1
type3:curNode is (-8,-792)
in minNode() now the loop is: 
(-8,-792)
(-8,-752)
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-849)
(-26,-849)
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(21,-884)
(21,-792)
minNode is: (-26,-849)
type3:complex condition 1
type1:curNode is (-106,-782)
in minNode() now the loop is: 
(-106,-782)
(-106,-849)
(-8,-849)
(-8,-752)
(-172,-752)
(-172,-782)
minNode is: (-8,-752)
type1:horizontal condition 1
type4:curNode is (-26,-862)
in minNode() now the loop is: 
(-26,-862)
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(21,-884)
(21,-792)
(-26,-792)
minNode is: (21,-884)
type4:horizontal condition 1
type3:curNode is (-194,-862)
in minNode() now the loop is: 
(-194,-862)
(-194,-736)
(-250,-736)
(-250,-909)
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(-26,-884)
(-26,-862)
minNode is: (-250,-909)
type3:horizontal condition 1
type1:curNode is (-191,-909)
in minNode() now the loop is: 
(-191,-909)
(-191,-951)
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(-26,-884)
(-26,-862)
(-194,-862)
(-194,-909)
minNode is: (-26,-862)
type1:horizontal condition 1
type1:curNode is (7,-951)
in minNode() now the loop is: 
(7,-951)
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(-61,-905)
(-61,-884)
(-26,-884)
(-26,-862)
(-191,-862)
(-191,-951)
minNode is: (263,-905)
type1:horizontal condition 1
type4:curNode is (7,-982)
in minNode() now the loop is: 
(7,-982)
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(119,-986)
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(7,-905)
minNode is: (119,-986)
type4:horizontal condition 1
type3:curNode is (-264,-982)
in minNode() now the loop is: 
(-264,-982)
(-264,-965)
(-486,-965)
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(7,-986)
(7,-982)
minNode is: (-433,-990)
type3:horizontal condition 1
type4:curNode is (-486,-982)
in minNode() now the loop is: 
(-486,-982)
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-433,-987)
(-433,-990)
(-264,-990)
(-264,-965)
(-486,-965)
minNode is: (-433,-987)
type4:horizontal condition 1
type3:curNode is (-551,-982)
in minNode() now the loop is: 
(-551,-982)
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-486,-987)
(-486,-982)
minNode is: (-986,-987)
type3:horizontal condition 1
type2:curNode is (-551,-964)
in minNode() now the loop is: 
(-551,-964)
(-500,-964)
(-500,-913)
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-688,-856)
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-551,-987)
minNode is: (-688,-856)
type2:horizontal condition 1
type3:curNode is (-531,-913)
in minNode() now the loop is: 
(-531,-913)
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-551,-856)
(-551,-964)
(-500,-964)
(-500,-913)
minNode is: (-551,-964)
type3:vertical condition 1
type2:curNode is (-531,-895)
in minNode() now the loop is: 
(-531,-895)
(-371,-895)
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-551,-856)
(-551,-913)
(-531,-913)
minNode is: (-551,-856)
type2:vertical condition 1
type2:curNode is (-371,-879)
in minNode() now the loop is: 
(-371,-879)
(-320,-879)
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-851)
(-541,-851)
(-541,-856)
(-551,-856)
(-551,-895)
(-371,-895)
minNode is: (-378,-851)
type2:complex condition 1
type2:curNode is (-320,-852)
in minNode() now the loop is: 
(-320,-852)
(-299,-852)
(-299,-810)
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-879)
(-320,-879)
minNode is: (-372,-810)
type2:horizontal condition 1
type3:curNode is (-372,-810)
in minNode() now the loop is: 
(-372,-810)
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-879)
(-320,-879)
(-320,-810)
minNode is: (-378,-879)
type3:vertical condition 1
type2:curNode is (-372,-762)
in minNode() now the loop is: 
(-372,-762)
(-336,-762)
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-810)
(-372,-810)
minNode is: (-378,-631)
type2:vertical condition 1
type2:curNode is (-336,-612)
in minNode() now the loop is: 
(-336,-612)
(-284,-612)
(-284,-605)
(-372,-605)
(-372,-631)
(-378,-631)
(-378,-762)
(-336,-762)
minNode is: (-372,-605)
type2:horizontal condition 1
type4:curNode is (-372,-631)
in minNode() now the loop is: 
(-372,-631)
(-378,-631)
(-378,-762)
(-336,-762)
(-336,-605)
(-372,-605)
minNode is: (-336,-762)
type4:vertical condition 1
type4:curNode is (-541,-856)
in minNode() now the loop is: 
(-541,-856)
(-551,-856)
(-551,-895)
(-371,-895)
(-371,-851)
(-541,-851)
minNode is: (-371,-895)
type4:horizontal condition 1
type4:curNode is (-688,-890)
in minNode() now the loop is: 
(-688,-890)
(-817,-890)
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-551,-987)
(-551,-856)
(-688,-856)
minNode is: (-551,-987)
type4:horizontal condition 1
type4:curNode is (-817,-897)
in minNode() now the loop is: 
(-817,-897)
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-688,-987)
(-688,-890)
(-817,-890)
minNode is: (-688,-987)
type4:horizontal condition 1
type3:curNode is (-916,-897)
in minNode() now the loop is: 
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-987)
(-817,-987)
(-817,-897)
minNode is: (-986,-987)
type3:vertical condition 1
type3:curNode is (-954,-867)
in minNode() now the loop is: 
(-954,-867)
(-954,-642)
(-986,-642)
(-986,-897)
(-916,-897)
(-916,-867)
minNode is: (-986,-897)
type3:horizontal condition 1
type1:curNode is (-433,-987)
in minNode() now the loop is: 
(-433,-987)
(-433,-990)
(-264,-990)
(-264,-965)
(-486,-965)
(-486,-987)
minNode is: (-264,-965)
type1:horizontal condition 1
type1:curNode is (-233,-990)
in minNode() now the loop is: 
(-233,-990)
(-233,-997)
(-187,-997)
(-187,-986)
(7,-986)
(7,-982)
(-264,-982)
(-264,-990)
minNode is: (7,-982)
type1:horizontal condition 1
type2:curNode is (-187,-986)
in minNode() now the loop is: 
(-187,-986)
(7,-986)
(7,-982)
(-233,-982)
(-233,-997)
(-187,-997)
minNode is: (-233,-982)
type2:horizontal condition 1
type2:curNode is (119,-954)
in minNode() now the loop is: 
(119,-954)
(312,-954)
(312,-935)
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(7,-905)
(7,-986)
(119,-986)
minNode is: (53,-935)
type2:horizontal condition 1
type3:curNode is (53,-935)
in minNode() now the loop is: 
(53,-935)
(53,-907)
(263,-907)
(263,-905)
(7,-905)
(7,-986)
(119,-986)
(119,-935)
minNode is: (7,-986)
type3:vertical condition 1
type2:curNode is (53,-907)
in minNode() now the loop is: 
(53,-907)
(263,-907)
(263,-905)
(7,-905)
(7,-935)
(53,-935)
minNode is: (7,-905)
type2:horizontal condition 1
type3:curNode is (-61,-905)
in minNode() now the loop is: 
(-61,-905)
(-61,-884)
(-26,-884)
(-26,-862)
(-191,-862)
(-191,-951)
(7,-951)
(7,-905)
minNode is: (-191,-951)
type3:horizontal condition 1
type2:curNode is (-61,-884)
in minNode() now the loop is: 
(-61,-884)
(-26,-884)
(-26,-862)
(-191,-862)
(-191,-951)
(-61,-951)
minNode is: (-191,-862)
type2:horizontal condition 1
type2:curNode is (213,-832)
in minNode() now the loop is: 
(213,-832)
(246,-832)
(246,-736)
(118,-736)
(118,-884)
(213,-884)
minNode is: (118,-736)
type2:vertical condition 1
type2:curNode is (367,-782)
in minNode() now the loop is: 
(367,-782)
(521,-782)
(521,-820)
(607,-820)
(607,-768)
(246,-768)
(246,-832)
(367,-832)
minNode is: (246,-768)
type2:horizontal condition 1
type1:curNode is (521,-782)
in minNode() now the loop is: 
(521,-782)
(521,-820)
(607,-820)
(607,-768)
(367,-768)
(367,-782)
minNode is: (607,-768)
type1:horizontal condition 1
type2:curNode is (653,-733)
in minNode() now the loop is: 
(653,-733)
(679,-733)
(679,-711)
(630,-711)
(630,-820)
(653,-820)
minNode is: (630,-711)
type2:horizontal condition 1
type1:curNode is (880,-733)
in minNode() now the loop is: 
(880,-733)
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(780,-721)
(780,-675)
(798,-675)
(798,-671)
(755,-671)
(755,-733)
minNode is: (939,-721)
type1:horizontal condition 1
type4:curNode is (880,-801)
in minNode() now the loop is: 
(880,-801)
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(880,-721)
minNode is: (924,-922)
type4:vertical condition 1
type3:curNode is (753,-801)
in minNode() now the loop is: 
(753,-801)
(753,-744)
(664,-744)
(664,-809)
(674,-809)
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
minNode is: (674,-809)
type3:complex condition 1
type4:curNode is (674,-861)
in minNode() now the loop is: 
(674,-861)
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-879)
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(674,-801)
minNode is: (699,-879)
type4:complex condition 1
type3:curNode is (415,-861)
in minNode() now the loop is: 
(415,-861)
(415,-834)
(297,-834)
(297,-841)
(309,-841)
(309,-874)
(412,-874)
(412,-928)
(492,-928)
(492,-934)
(699,-934)
(699,-861)
minNode is: (412,-874)
type3:complex condition 1
type1:curNode is (309,-841)
in minNode() now the loop is: 
(309,-841)
(309,-874)
(415,-874)
(415,-834)
(297,-834)
(297,-841)
minNode is: (415,-834)
type1:horizontal condition 1
type1:curNode is (492,-928)
in minNode() now the loop is: 
(492,-928)
(492,-934)
(699,-934)
(699,-861)
(412,-861)
(412,-928)
minNode is: (699,-861)
type1:horizontal condition 1
type1:curNode is (734,-879)
in minNode() now the loop is: 
(734,-879)
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(674,-801)
(674,-879)
minNode is: (924,-801)
type1:horizontal condition 1
type4:curNode is (734,-970)
in minNode() now the loop is: 
(734,-970)
(388,-970)
(388,-998)
(734,-998)
(734,-992)
(998,-992)
(998,408)
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
minNode is: (734,-992)
type4:complex condition 3
type3:curNode is (993,408)
in minNode() now the loop is: 
(993,408)
(993,786)
(981,786)
(981,652)
(988,652)
(988,229)
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,408)
minNode is: (988,229)
type3:vertical condition 1
type1:curNode is (988,652)
in minNode() now the loop is: 
(988,652)
(988,408)
(993,408)
(993,786)
(981,786)
(981,652)
minNode is: (993,786)
type1:vertical condition 1
type1:curNode is (992,229)
in minNode() now the loop is: 
(992,229)
(992,-610)
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,408)
(988,408)
(988,229)
minNode is: (998,408)
type1:vertical condition 1
type1:curNode is (993,-610)
in minNode() now the loop is: 
(993,-610)
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,229)
(992,229)
(992,-610)
minNode is: (998,229)
type1:vertical condition 1
type4:curNode is (993,-667)
in minNode() now the loop is: 
(993,-667)
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,-610)
(993,-610)
minNode is: (998,-992)
type4:vertical condition 1
type3:curNode is (986,-667)
in minNode() now the loop is: 
(986,-667)
(986,-214)
(954,-214)
(954,-744)
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,-667)
minNode is: (954,-744)
type3:vertical condition 1
type1:curNode is (993,-744)
in minNode() now the loop is: 
(993,-744)
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,-667)
(954,-667)
(954,-744)
minNode is: (998,-667)
type1:vertical condition 1
type4:curNode is (993,-922)
in minNode() now the loop is: 
(993,-922)
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,-744)
(993,-744)
minNode is: (998,-992)
type4:vertical condition 1
type3:curNode is (924,-922)
in minNode() now the loop is: 
(924,-922)
(924,-801)
(734,-801)
(734,-992)
(998,-992)
(998,-922)
minNode is: (734,-992)
type3:horizontal condition 1
type2:curNode is (924,-741)
in minNode() now the loop is: 
(924,-741)
(952,-741)
(952,-706)
(939,-706)
(939,-721)
(880,-721)
(880,-801)
(924,-801)
minNode is: (880,-721)
type2:horizontal condition 1
type4:curNode is (939,-721)
in minNode() now the loop is: 
(939,-721)
(924,-721)
(924,-741)
(952,-741)
(952,-706)
(939,-706)
minNode is: (952,-741)
type4:vertical condition 1
type3:curNode is (780,-721)
in minNode() now the loop is: 
(780,-721)
(780,-675)
(798,-675)
(798,-671)
(755,-671)
(755,-733)
(880,-733)
(880,-721)
minNode is: (755,-733)
type3:horizontal condition 1
type2:curNode is (780,-675)
in minNode() now the loop is: 
(780,-675)
(798,-675)
(798,-671)
(755,-671)
(755,-733)
(780,-733)
minNode is: (755,-671)
type2:horizontal condition 1
type2:curNode is (927,-241)
in minNode() now the loop is: 
(927,-241)
(940,-241)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-472)
(855,-472)
(855,-675)
(927,-675)
minNode is: (918,-150)
type2:vertical condition 1
type2:curNode is (940,-164)
in minNode() now the loop is: 
(940,-164)
(954,-164)
(954,-147)
(946,-147)
(946,-150)
(918,-150)
(918,-241)
(940,-241)
minNode is: (918,-150)
type2:horizontal condition 1
type4:curNode is (946,-150)
in minNode() now the loop is: 
(946,-150)
(940,-150)
(940,-164)
(954,-164)
(954,-147)
(946,-147)
minNode is: (954,-164)
type4:vertical condition 1
type4:curNode is (918,-615)
in minNode() now the loop is: 
(918,-615)
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-472)
(855,-472)
(855,-675)
(927,-675)
(927,-241)
(918,-241)
minNode is: (927,-675)
type4:vertical condition 1
type3:curNode is (902,-615)
in minNode() now the loop is: 
(902,-615)
(902,-570)
(893,-570)
(893,-508)
(905,-508)
(905,-472)
(855,-472)
(855,-675)
(927,-675)
(927,-615)
minNode is: (855,-675)
type3:vertical condition 1
type3:curNode is (893,-570)
in minNode() now the loop is: 
(893,-570)
(893,-508)
(905,-508)
(905,-472)
(855,-472)
(855,-615)
(902,-615)
(902,-570)
minNode is: (855,-615)
type3:vertical condition 1
type2:curNode is (893,-508)
in minNode() now the loop is: 
(893,-508)
(905,-508)
(905,-472)
(855,-472)
(855,-570)
(893,-570)
minNode is: (855,-472)
type2:horizontal condition 1
type1:curNode is (853,-428)
in minNode() now the loop is: 
(853,-428)
(853,-433)
(820,-433)
(820,-409)
(713,-409)
(713,-472)
(905,-472)
(905,-365)
(842,-365)
(842,-428)
minNode is: (905,-365)
type1:vertical condition 1
type4:curNode is (853,-433)
in minNode() now the loop is: 
(853,-433)
(820,-433)
(820,-409)
(713,-409)
(713,-472)
(905,-472)
(905,-428)
(853,-428)
minNode is: (905,-472)
type4:horizontal condition 1
type3:curNode is (820,-433)
in minNode() now the loop is: 
(820,-433)
(820,-409)
(713,-409)
(713,-472)
(853,-472)
(853,-433)
minNode is: (713,-472)
type3:horizontal condition 1
type2:curNode is (820,-304)
in minNode() now the loop is: 
(820,-304)
(854,-304)
(854,-188)
(773,-188)
(773,-346)
(820,-346)
minNode is: (773,-188)
type2:vertical condition 1
type3:curNode is (805,-184)
in minNode() now the loop is: 
(805,-184)
(805,-15)
(792,-15)
(792,-72)
(791,-72)
(791,-188)
(854,-188)
(854,-184)
minNode is: (791,-188)
type3:horizontal condition 1
type4:curNode is (792,-72)
in minNode() now the loop is: 
(792,-72)
(791,-72)
(791,-188)
(805,-188)
(805,-15)
(792,-15)
minNode is: (805,-188)
type4:vertical condition 1
type3:curNode is (716,-72)
in minNode() now the loop is: 
(716,-72)
(716,-70)
(767,-70)
(767,77)
(805,77)
(805,80)
(712,80)
(712,-74)
(791,-74)
(791,-72)
minNode is: (712,-74)
type3:horizontal condition 1
type2:curNode is (716,-70)
in minNode() now the loop is: 
(716,-70)
(767,-70)
(767,77)
(805,77)
(805,80)
(712,80)
(712,-74)
(716,-74)
minNode is: (712,80)
type2:vertical condition 1
type2:curNode is (767,77)
in minNode() now the loop is: 
(767,77)
(805,77)
(805,80)
(712,80)
(712,-70)
(767,-70)
minNode is: (712,80)
type2:horizontal condition 1
type1:curNode is (867,77)
in minNode() now the loop is: 
(867,77)
(867,-6)
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,113)
(937,113)
(937,164)
(847,164)
(847,177)
(805,177)
(805,77)
minNode is: (921,113)
type1:vertical condition 1
type1:curNode is (884,-6)
in minNode() now the loop is: 
(884,-6)
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,71)
(921,71)
(921,77)
(867,77)
(867,-6)
minNode is: (918,71)
type1:vertical condition 1
type4:curNode is (884,-50)
in minNode() now the loop is: 
(884,-50)
(822,-50)
(822,-108)
(891,-108)
(891,-86)
(918,-86)
(918,-6)
(884,-6)
minNode is: (918,-86)
type4:vertical condition 1
type2:curNode is (891,-86)
in minNode() now the loop is: 
(891,-86)
(918,-86)
(918,-50)
(822,-50)
(822,-108)
(891,-108)
minNode is: (822,-50)
type2:horizontal condition 1
type2:curNode is (918,71)
in minNode() now the loop is: 
(918,71)
(921,71)
(921,77)
(867,77)
(867,-6)
(918,-6)
minNode is: (867,77)
type2:horizontal condition 1
type2:curNode is (921,113)
in minNode() now the loop is: 
(921,113)
(937,113)
(937,164)
(847,164)
(847,177)
(805,177)
(805,77)
(921,77)
minNode is: (847,164)
type2:horizontal condition 1
type3:curNode is (847,164)
in minNode() now the loop is: 
(847,164)
(847,177)
(805,177)
(805,77)
(921,77)
(921,164)
minNode is: (805,77)
type3:vertical condition 1
type2:curNode is (847,299)
in minNode() now the loop is: 
(847,299)
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(707,432)
(707,177)
(847,177)
minNode is: (707,432)
type2:horizontal condition 1
type1:curNode is (876,299)
in minNode() now the loop is: 
(876,299)
(876,256)
(936,256)
(936,199)
(937,199)
(937,376)
(848,376)
(848,432)
(847,432)
(847,299)
minNode is: (937,376)
type1:vertical condition 1
type1:curNode is (936,256)
in minNode() now the loop is: 
(936,256)
(936,199)
(937,199)
(937,299)
(876,299)
(876,256)
minNode is: (937,299)
type1:vertical condition 1
type3:curNode is (848,376)
in minNode() now the loop is: 
(848,376)
(848,432)
(847,432)
(847,299)
(937,299)
(937,376)
minNode is: (847,299)
type3:vertical condition 1
type2:curNode is (863,772)
in minNode() now the loop is: 
(863,772)
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(814,841)
(814,599)
(863,599)
minNode is: (814,841)
type2:vertical condition 1
type1:curNode is (864,772)
in minNode() now the loop is: 
(864,772)
(864,601)
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(814,841)
(814,772)
minNode is: (922,841)
type1:horizontal condition 1
type1:curNode is (881,601)
in minNode() now the loop is: 
(881,601)
(881,510)
(958,510)
(958,58)
(974,58)
(974,858)
(951,858)
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(864,841)
(864,601)
minNode is: (974,858)
type1:vertical condition 1
type1:curNode is (958,510)
in minNode() now the loop is: 
(958,510)
(958,58)
(974,58)
(974,601)
(881,601)
(881,510)
minNode is: (974,601)
type1:vertical condition 1
type4:curNode is (951,700)
in minNode() now the loop is: 
(951,700)
(949,700)
(949,827)
(922,827)
(922,841)
(864,841)
(864,601)
(974,601)
(974,858)
(951,858)
minNode is: (974,601)
type4:vertical condition 1
type3:curNode is (949,700)
in minNode() now the loop is: 
(949,700)
(949,827)
(922,827)
(922,841)
(864,841)
(864,601)
(974,601)
(974,700)
minNode is: (864,601)
type3:vertical condition 1
type3:curNode is (922,827)
in minNode() now the loop is: 
(922,827)
(922,841)
(864,841)
(864,700)
(949,700)
(949,827)
minNode is: (864,700)
type3:vertical condition 1
type2:curNode is (874,882)
in minNode() now the loop is: 
(874,882)
(925,882)
(925,924)
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,834)
(874,834)
minNode is: (645,924)
type2:horizontal condition 1
type3:curNode is (645,924)
in minNode() now the loop is: 
(645,924)
(645,934)
(39,934)
(39,919)
(592,919)
(592,911)
(602,911)
(602,834)
(874,834)
(874,924)
minNode is: (602,911)
type3:complex condition 1
type1:curNode is (592,919)
in minNode() now the loop is: 
(592,919)
(592,911)
(645,911)
(645,934)
(39,934)
(39,919)
minNode is: (645,934)
type1:horizontal condition 1
type3:curNode is (313,903)
in minNode() now the loop is: 
(313,903)
(313,912)
(264,912)
(264,878)
(332,878)
(332,903)
minNode is: (264,878)
type3:horizontal condition 1
type3:curNode is (-331,896)
in minNode() now the loop is: 
(-331,896)
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-584,919)
(-584,883)
(38,883)
(38,896)
minNode is: (-584,883)
type3:horizontal condition 1
type2:curNode is (-331,909)
in minNode() now the loop is: 
(-331,909)
(-329,909)
(-329,914)
(-177,914)
(-177,919)
(-584,919)
(-584,883)
(-331,883)
minNode is: (-584,919)
type2:horizontal condition 1
type2:curNode is (-329,914)
in minNode() now the loop is: 
(-329,914)
(-177,914)
(-177,919)
(-331,919)
(-331,909)
(-329,909)
minNode is: (-331,919)
type2:vertical condition 1
type3:curNode is (-589,919)
in minNode() now the loop is: 
(-589,919)
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-661,983)
(-661,875)
(-584,875)
(-584,919)
minNode is: (-661,875)
type3:horizontal condition 1
type2:curNode is (-589,975)
in minNode() now the loop is: 
(-589,975)
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-661,983)
(-661,875)
(-589,875)
minNode is: (-661,983)
type2:horizontal condition 1
type1:curNode is (813,975)
in minNode() now the loop is: 
(813,975)
(813,942)
(968,942)
(968,964)
(966,964)
(966,997)
(819,997)
(819,998)
(-824,998)
(-824,984)
(531,984)
(531,983)
(-589,983)
(-589,975)
minNode is: (819,998)
type1:horizontal condition 1
type3:curNode is (966,964)
in minNode() now the loop is: 
(966,964)
(966,997)
(819,997)
(819,998)
(813,998)
(813,942)
(968,942)
(968,964)
minNode is: (813,942)
type3:horizontal condition 1
type3:curNode is (819,997)
in minNode() now the loop is: 
(819,997)
(819,998)
(813,998)
(813,942)
(966,942)
(966,997)
minNode is: (813,942)
type3:vertical condition 1
type1:curNode is (531,984)
in minNode() now the loop is: 
(531,984)
(531,983)
(-589,983)
(-589,975)
(813,975)
(813,998)
(-824,998)
(-824,984)
minNode is: (813,998)
type1:horizontal condition 1
type4:curNode is (531,983)
in minNode() now the loop is: 
(531,983)
(-589,983)
(-589,975)
(813,975)
(813,998)
(531,998)
minNode is: (813,975)
type4:horizontal condition 1
type4:curNode is (-700,958)
in minNode() now the loop is: 
(-700,958)
(-830,958)
(-830,967)
(-839,967)
(-839,908)
(-661,908)
(-661,983)
(-700,983)
minNode is: (-661,908)
type4:vertical condition 1
type3:curNode is (-830,958)
in minNode() now the loop is: 
(-830,958)
(-830,967)
(-839,967)
(-839,908)
(-661,908)
(-661,958)
minNode is: (-839,908)
type3:vertical condition 1
a rectangle is got: 
(-999,967)
(-999,797)
(-839,797)
(-839,967)
a rectangle is got: 
(-999,-39)
(-980,-39)
(-980,264)
(-999,264)
a rectangle is got: 
(-909,264)
(-909,593)
(-999,593)
(-999,264)
a rectangle is got: 
(-940,593)
(-940,633)
(-999,633)
(-999,593)
a rectangle is got: 
(-856,633)
(-856,582)
(-776,582)
(-776,633)
a rectangle is got: 
(-820,582)
(-820,559)
(-776,559)
(-776,582)
a rectangle is got: 
(-824,559)
(-824,315)
(-776,315)
(-776,559)
a rectangle is got: 
(-882,315)
(-882,203)
(-776,203)
(-776,315)
a rectangle is got: 
(-811,203)
(-811,141)
(-776,141)
(-776,203)
a rectangle is got: 
(-776,698)
(-744,698)
(-744,723)
(-776,723)
a rectangle is got: 
(-744,260)
(-702,260)
(-702,432)
(-744,432)
a rectangle is got: 
(-702,561)
(-706,561)
(-706,489)
(-702,489)
a rectangle is got: 
(-715,489)
(-715,432)
(-702,432)
(-702,489)
a rectangle is got: 
(-718,432)
(-718,626)
(-744,626)
(-744,432)
a rectangle is got: 
(-689,626)
(-689,571)
(-607,571)
(-607,626)
a rectangle is got: 
(-659,571)
(-659,436)
(-607,436)
(-607,571)
a rectangle is got: 
(-607,637)
(-744,637)
(-744,626)
(-607,626)
a rectangle is got: 
(-509,637)
(-509,818)
(-662,818)
(-662,637)
a rectangle is got: 
(-509,787)
(-493,787)
(-493,818)
(-509,818)
a rectangle is got: 
(-493,806)
(-353,806)
(-353,818)
(-493,818)
a rectangle is got: 
(-353,817)
(-276,817)
(-276,818)
(-353,818)
a rectangle is got: 
(-518,818)
(-518,827)
(-662,827)
(-662,818)
a rectangle is got: 
(-662,723)
(-744,723)
(-744,637)
(-662,637)
a rectangle is got: 
(-960,723)
(-960,633)
(-776,633)
(-776,723)
a rectangle is got: 
(-960,678)
(-999,678)
(-999,633)
(-960,633)
a rectangle is got: 
(-977,678)
(-977,797)
(-999,797)
(-999,678)
a rectangle is got: 
(-839,908)
(-661,908)
(-661,958)
(-839,958)
a rectangle is got: 
(-661,875)
(-589,875)
(-589,983)
(-661,983)
a rectangle is got: 
(-612,875)
(-612,841)
(-584,841)
(-584,875)
a rectangle is got: 
(-584,883)
(-331,883)
(-331,919)
(-584,919)
a rectangle is got: 
(38,883)
(38,896)
(-331,896)
(-331,883)
a rectangle is got: 
(38,870)
(271,870)
(271,896)
(38,896)
a rectangle is got: 
(264,878)
(313,878)
(313,912)
(264,912)
a rectangle is got: 
(332,878)
(332,903)
(313,903)
(313,878)
a rectangle is got: 
(336,804)
(264,804)
(264,765)
(336,765)
a rectangle is got: 
(264,775)
(188,775)
(188,765)
(264,765)
a rectangle is got: 
(160,775)
(160,763)
(188,763)
(188,775)
a rectangle is got: 
(160,810)
(185,810)
(185,814)
(160,814)
a rectangle is got: 
(-103,814)
(-103,781)
(86,781)
(86,814)
a rectangle is got: 
(86,778)
(15,778)
(15,763)
(86,763)
a rectangle is got: 
(-236,778)
(-236,691)
(-189,691)
(-189,778)
a rectangle is got: 
(-236,720)
(-403,720)
(-403,712)
(-236,712)
a rectangle is got: 
(-403,624)
(-397,624)
(-397,712)
(-403,712)
a rectangle is got: 
(-244,712)
(-244,691)
(-236,691)
(-236,712)
a rectangle is got: 
(-174,691)
(-174,718)
(-189,718)
(-189,691)
a rectangle is got: 
(-189,759)
(-69,759)
(-69,778)
(-189,778)
a rectangle is got: 
(-69,663)
(-1,663)
(-1,683)
(-69,683)
a rectangle is got: 
(-51,663)
(-51,634)
(-1,634)
(-1,663)
a rectangle is got: 
(-156,634)
(-156,566)
(-1,566)
(-1,634)
a rectangle is got: 
(-156,619)
(-231,619)
(-231,566)
(-156,566)
a rectangle is got: 
(-231,589)
(-383,589)
(-383,566)
(-231,566)
a rectangle is got: 
(79,566)
(79,614)
(22,614)
(22,566)
a rectangle is got: 
(405,614)
(405,700)
(284,700)
(284,614)
a rectangle is got: 
(404,619)
(524,619)
(524,754)
(404,754)
a rectangle is got: 
(438,619)
(438,520)
(524,520)
(524,619)
a rectangle is got: 
(438,568)
(420,568)
(420,520)
(438,520)
a rectangle is got: 
(524,656)
(705,656)
(705,754)
(524,754)
a rectangle is got: 
(735,656)
(735,729)
(705,729)
(705,656)
a rectangle is got: 
(735,805)
(753,805)
(753,813)
(735,813)
a rectangle is got: 
(753,739)
(800,739)
(800,813)
(753,813)
a rectangle is got: 
(722,813)
(722,729)
(735,729)
(735,813)
a rectangle is got: 
(284,747)
(252,747)
(252,710)
(284,710)
a rectangle is got: 
(120,710)
(120,614)
(284,614)
(284,710)
a rectangle is got: 
(120,712)
(22,712)
(22,614)
(120,614)
a rectangle is got: 
(22,606)
(-1,606)
(-1,566)
(22,566)
a rectangle is got: 
(21,683)
(21,731)
(15,731)
(15,683)
a rectangle is got: 
(332,777)
(485,777)
(485,903)
(332,903)
a rectangle is got: 
(485,796)
(629,796)
(629,903)
(485,903)
a rectangle is got: 
(602,832)
(646,832)
(646,834)
(602,834)
a rectangle is got: 
(874,834)
(874,924)
(602,924)
(602,834)
a rectangle is got: 
(814,599)
(863,599)
(863,772)
(814,772)
a rectangle is got: 
(780,599)
(780,487)
(863,487)
(863,599)
a rectangle is got: 
(772,487)
(772,432)
(863,432)
(863,487)
a rectangle is got: 
(707,432)
(707,177)
(847,177)
(847,432)
a rectangle is got: 
(762,475)
(725,475)
(725,440)
(762,440)
a rectangle is got: 
(601,440)
(601,349)
(762,349)
(762,440)
a rectangle is got: 
(601,386)
(559,386)
(559,349)
(601,349)
a rectangle is got: 
(589,386)
(589,492)
(559,492)
(559,386)
a rectangle is got: 
(732,492)
(732,498)
(696,498)
(696,492)
a rectangle is got: 
(696,631)
(632,631)
(632,585)
(696,585)
a rectangle is got: 
(562,631)
(562,606)
(632,606)
(632,631)
a rectangle is got: 
(559,585)
(559,492)
(696,492)
(696,585)
a rectangle is got: 
(707,338)
(665,338)
(665,313)
(707,313)
a rectangle is got: 
(665,314)
(574,314)
(574,313)
(665,313)
a rectangle is got: 
(706,313)
(706,252)
(707,252)
(707,313)
a rectangle is got: 
(670,252)
(670,177)
(707,177)
(707,252)
a rectangle is got: 
(670,265)
(667,265)
(667,177)
(670,177)
a rectangle is got: 
(558,265)
(558,293)
(553,293)
(553,265)
a rectangle is got: 
(558,359)
(515,359)
(515,293)
(558,293)
a rectangle is got: 
(515,421)
(432,421)
(432,293)
(515,293)
a rectangle is got: 
(498,421)
(498,423)
(432,423)
(432,421)
a rectangle is got: 
(498,511)
(388,511)
(388,423)
(498,423)
a rectangle is got: 
(388,497)
(322,497)
(322,423)
(388,423)
a rectangle is got: 
(364,521)
(289,521)
(289,469)
(364,469)
a rectangle is got: 
(230,521)
(230,504)
(289,504)
(289,521)
a rectangle is got: 
(230,544)
(193,544)
(193,535)
(230,535)
a rectangle is got: 
(-144,535)
(-144,435)
(-98,435)
(-98,535)
a rectangle is got: 
(-110,435)
(-110,404)
(-98,404)
(-98,435)
a rectangle is got: 
(-98,520)
(-5,520)
(-5,535)
(-98,535)
a rectangle is got: 
(-5,426)
(-40,426)
(-40,416)
(-5,416)
a rectangle is got: 
(-40,500)
(-66,500)
(-66,435)
(-40,435)
a rectangle is got: 
(-51,435)
(-51,416)
(-40,416)
(-40,435)
a rectangle is got: 
(25,416)
(25,535)
(-5,535)
(-5,416)
a rectangle is got: 
(25,406)
(42,406)
(42,535)
(25,535)
a rectangle is got: 
(141,343)
(97,343)
(97,285)
(141,285)
a rectangle is got: 
(-46,343)
(-46,366)
(-53,366)
(-53,343)
a rectangle is got: 
(-53,381)
(-187,381)
(-187,343)
(-53,343)
a rectangle is got: 
(-187,294)
(-261,294)
(-261,264)
(-187,264)
a rectangle is got: 
(-261,472)
(-347,472)
(-347,470)
(-261,470)
a rectangle is got: 
(-441,470)
(-441,481)
(-442,481)
(-442,470)
a rectangle is got: 
(-442,521)
(-506,521)
(-506,476)
(-442,476)
a rectangle is got: 
(-492,521)
(-492,524)
(-506,524)
(-506,521)
a rectangle is got: 
(-492,619)
(-564,619)
(-564,587)
(-492,587)
a rectangle is got: 
(-564,545)
(-558,545)
(-558,587)
(-564,587)
a rectangle is got: 
(-520,587)
(-520,524)
(-492,524)
(-492,587)
a rectangle is got: 
(-506,509)
(-531,509)
(-531,476)
(-506,476)
a rectangle is got: 
(-478,476)
(-478,470)
(-442,470)
(-442,476)
a rectangle is got: 
(-386,452)
(-500,452)
(-500,342)
(-386,342)
a rectangle is got: 
(-500,281)
(-402,281)
(-402,342)
(-500,342)
a rectangle is got: 
(-552,281)
(-552,126)
(-402,126)
(-402,281)
a rectangle is got: 
(-535,180)
(-670,180)
(-670,41)
(-535,41)
a rectangle is got: 
(-558,180)
(-558,219)
(-559,219)
(-559,180)
a rectangle is got: 
(-559,352)
(-687,352)
(-687,183)
(-559,183)
a rectangle is got: 
(-683,352)
(-683,435)
(-687,435)
(-687,352)
a rectangle is got: 
(-670,183)
(-670,180)
(-559,180)
(-559,183)
a rectangle is got: 
(-655,41)
(-655,8)
(-615,8)
(-615,41)
a rectangle is got: 
(-646,10)
(-701,10)
(-701,-155)
(-646,-155)
a rectangle is got: 
(-696,111)
(-794,111)
(-794,101)
(-696,101)
a rectangle is got: 
(-791,111)
(-791,124)
(-794,124)
(-794,111)
a rectangle is got: 
(-841,101)
(-841,47)
(-833,47)
(-833,101)
a rectangle is got: 
(-833,-57)
(-770,-57)
(-770,1)
(-833,1)
a rectangle is got: 
(-809,-57)
(-809,-119)
(-770,-119)
(-770,-57)
a rectangle is got: 
(-696,1)
(-696,101)
(-833,101)
(-833,1)
a rectangle is got: 
(-701,-138)
(-709,-138)
(-709,-155)
(-701,-155)
a rectangle is got: 
(-805,-138)
(-805,-289)
(-709,-289)
(-709,-138)
a rectangle is got: 
(-775,-201)
(-847,-201)
(-847,-264)
(-775,-264)
a rectangle is got: 
(-812,-201)
(-812,-58)
(-847,-58)
(-847,-201)
a rectangle is got: 
(-884,-264)
(-884,-359)
(-775,-359)
(-775,-264)
a rectangle is got: 
(-904,-359)
(-904,-187)
(-931,-187)
(-931,-359)
a rectangle is got: 
(-904,-119)
(-923,-119)
(-923,-187)
(-904,-187)
a rectangle is got: 
(-903,-119)
(-903,43)
(-923,43)
(-923,-119)
a rectangle is got: 
(-931,-417)
(-966,-417)
(-966,-468)
(-931,-468)
a rectangle is got: 
(-944,-119)
(-977,-119)
(-977,-146)
(-944,-146)
a rectangle is got: 
(-933,-119)
(-933,-10)
(-977,-10)
(-977,-119)
a rectangle is got: 
(-985,-146)
(-985,-105)
(-996,-105)
(-996,-146)
a rectangle is got: 
(-996,-459)
(-991,-459)
(-991,-436)
(-996,-436)
a rectangle is got: 
(-944,-436)
(-944,-146)
(-996,-146)
(-996,-436)
a rectangle is got: 
(-923,-468)
(-923,-488)
(-863,-488)
(-863,-468)
a rectangle is got: 
(-863,-506)
(-823,-506)
(-823,-468)
(-863,-468)
a rectangle is got: 
(-768,-506)
(-768,-501)
(-823,-501)
(-823,-506)
a rectangle is got: 
(-823,-417)
(-775,-417)
(-775,-359)
(-823,-359)
a rectangle is got: 
(-783,-417)
(-783,-471)
(-775,-471)
(-775,-417)
a rectangle is got: 
(-746,-367)
(-709,-367)
(-709,-364)
(-746,-364)
a rectangle is got: 
(-647,-364)
(-647,-195)
(-746,-195)
(-746,-364)
a rectangle is got: 
(-650,-412)
(-647,-412)
(-647,-238)
(-650,-238)
a rectangle is got: 
(-647,-472)
(-397,-472)
(-397,-238)
(-647,-238)
a rectangle is got: 
(-397,-144)
(-487,-144)
(-487,-167)
(-397,-167)
a rectangle is got: 
(-528,-167)
(-528,-173)
(-508,-173)
(-508,-167)
a rectangle is got: 
(-508,-227)
(-397,-227)
(-397,-167)
(-508,-167)
a rectangle is got: 
(-557,-227)
(-557,-180)
(-621,-180)
(-621,-227)
a rectangle is got: 
(-621,-238)
(-397,-238)
(-397,-227)
(-621,-227)
a rectangle is got: 
(-615,-150)
(-561,-150)
(-561,41)
(-615,41)
a rectangle is got: 
(-545,-150)
(-545,-130)
(-561,-130)
(-561,-150)
a rectangle is got: 
(-561,33)
(-535,33)
(-535,41)
(-561,41)
a rectangle is got: 
(-443,126)
(-443,48)
(-383,48)
(-383,126)
a rectangle is got: 
(-383,181)
(-402,181)
(-402,126)
(-383,126)
a rectangle is got: 
(-478,407)
(-382,407)
(-382,470)
(-478,470)
a rectangle is got: 
(-382,340)
(-342,340)
(-342,369)
(-382,369)
a rectangle is got: 
(-293,369)
(-293,311)
(-261,311)
(-261,369)
a rectangle is got: 
(-313,311)
(-313,216)
(-264,216)
(-264,311)
a rectangle is got: 
(-313,166)
(-303,166)
(-303,177)
(-313,177)
a rectangle is got: 
(-328,166)
(-328,45)
(-303,45)
(-303,166)
a rectangle is got: 
(-376,45)
(-376,-40)
(-327,-40)
(-327,45)
a rectangle is got: 
(-376,-486)
(-331,-486)
(-331,-474)
(-376,-474)
a rectangle is got: 
(-432,-486)
(-432,-496)
(-331,-496)
(-331,-486)
a rectangle is got: 
(-438,-496)
(-438,-597)
(-331,-597)
(-331,-496)
a rectangle is got: 
(-394,-557)
(-414,-557)
(-414,-658)
(-394,-658)
a rectangle is got: 
(-578,-557)
(-578,-700)
(-414,-700)
(-414,-557)
a rectangle is got: 
(-578,-577)
(-600,-577)
(-600,-700)
(-578,-700)
a rectangle is got: 
(-669,-577)
(-669,-477)
(-735,-477)
(-735,-577)
a rectangle is got: 
(-760,-477)
(-760,-519)
(-735,-519)
(-735,-477)
a rectangle is got: 
(-735,-593)
(-845,-593)
(-845,-704)
(-735,-704)
a rectangle is got: 
(-865,-593)
(-865,-557)
(-896,-557)
(-896,-593)
a rectangle is got: 
(-896,-728)
(-877,-728)
(-877,-656)
(-896,-656)
a rectangle is got: 
(-845,-656)
(-845,-593)
(-896,-593)
(-896,-656)
a rectangle is got: 
(-845,-844)
(-646,-844)
(-646,-775)
(-845,-775)
a rectangle is got: 
(-646,-762)
(-652,-762)
(-652,-775)
(-646,-775)
a rectangle is got: 
(-804,-775)
(-804,-704)
(-845,-704)
(-845,-775)
a rectangle is got: 
(-600,-704)
(-600,-577)
(-735,-577)
(-735,-704)
a rectangle is got: 
(-499,-700)
(-499,-721)
(-414,-721)
(-414,-700)
a rectangle is got: 
(-631,-721)
(-631,-735)
(-530,-735)
(-530,-721)
a rectangle is got: 
(-530,-847)
(-443,-847)
(-443,-721)
(-530,-721)
a rectangle is got: 
(-443,-786)
(-414,-786)
(-414,-721)
(-443,-721)
a rectangle is got: 
(-326,-474)
(-326,-292)
(-376,-292)
(-376,-474)
a rectangle is got: 
(-279,-292)
(-279,-185)
(-376,-185)
(-376,-292)
a rectangle is got: 
(-279,-236)
(-231,-236)
(-231,-185)
(-279,-185)
a rectangle is got: 
(-231,-419)
(-161,-419)
(-161,-339)
(-231,-339)
a rectangle is got: 
(-270,-419)
(-270,-324)
(-316,-324)
(-316,-419)
a rectangle is got: 
(-316,-526)
(-284,-526)
(-284,-522)
(-316,-522)
a rectangle is got: 
(-160,-522)
(-160,-419)
(-316,-419)
(-316,-522)
a rectangle is got: 
(-215,-540)
(-188,-540)
(-188,-500)
(-215,-500)
a rectangle is got: 
(-188,-584)
(-178,-584)
(-178,-500)
(-188,-500)
a rectangle is got: 
(-178,-621)
(-262,-621)
(-262,-636)
(-178,-636)
a rectangle is got: 
(-156,-636)
(-156,-689)
(-143,-689)
(-143,-636)
a rectangle is got: 
(-156,-646)
(-275,-646)
(-275,-689)
(-156,-689)
a rectangle is got: 
(-143,-719)
(-85,-719)
(-85,-698)
(-143,-698)
a rectangle is got: 
(-14,-698)
(-14,-636)
(-143,-636)
(-143,-698)
a rectangle is got: 
(-90,-636)
(-90,-500)
(-178,-500)
(-178,-636)
a rectangle is got: 
(-160,-392)
(-107,-392)
(-107,-372)
(-160,-372)
a rectangle is got: 
(-107,-443)
(-25,-443)
(-25,-372)
(-107,-372)
a rectangle is got: 
(-161,-372)
(-161,-419)
(-160,-419)
(-160,-372)
a rectangle is got: 
(-161,-359)
(-106,-359)
(-106,-339)
(-161,-339)
a rectangle is got: 
(-106,-344)
(21,-344)
(21,-339)
(-106,-339)
a rectangle is got: 
(-177,-339)
(-177,-281)
(-231,-281)
(-231,-339)
a rectangle is got: 
(-69,-281)
(-69,-280)
(-170,-280)
(-170,-281)
a rectangle is got: 
(-170,-275)
(-231,-275)
(-231,-281)
(-170,-281)
a rectangle is got: 
(108,-275)
(108,-229)
(93,-229)
(93,-275)
a rectangle is got: 
(117,-229)
(117,-170)
(93,-170)
(93,-229)
a rectangle is got: 
(117,-293)
(204,-293)
(204,-289)
(117,-289)
a rectangle is got: 
(260,-289)
(260,-306)
(278,-306)
(278,-289)
a rectangle is got: 
(260,-434)
(331,-434)
(331,-333)
(260,-333)
a rectangle is got: 
(343,-434)
(343,-423)
(331,-423)
(331,-434)
a rectangle is got: 
(323,-333)
(323,-306)
(260,-306)
(260,-333)
a rectangle is got: 
(278,-170)
(117,-170)
(117,-289)
(278,-289)
a rectangle is got: 
(93,-261)
(59,-261)
(59,-275)
(93,-275)
a rectangle is got: 
(59,-232)
(28,-232)
(28,-275)
(59,-275)
a rectangle is got: 
(28,-199)
(65,-199)
(65,-185)
(28,-185)
a rectangle is got: 
(-347,-185)
(-347,-40)
(-376,-40)
(-376,-185)
a rectangle is got: 
(-327,-70)
(-234,-70)
(-234,23)
(-327,23)
a rectangle is got: 
(-234,-129)
(-75,-129)
(-75,0)
(-234,0)
a rectangle is got: 
(-131,-129)
(-131,-184)
(0,-184)
(0,-129)
a rectangle is got: 
(-54,-129)
(-54,-25)
(-75,-25)
(-75,-129)
a rectangle is got: 
(-54,57)
(-69,57)
(-69,-25)
(-54,-25)
a rectangle is got: 
(-4,57)
(-4,75)
(-69,75)
(-69,57)
a rectangle is got: 
(-125,0)
(-125,23)
(-234,23)
(-234,0)
a rectangle is got: 
(-303,23)
(-303,45)
(-327,45)
(-327,23)
a rectangle is got: 
(-273,177)
(-273,181)
(-296,181)
(-296,177)
a rectangle is got: 
(-296,216)
(-313,216)
(-313,177)
(-296,177)
a rectangle is got: 
(-264,264)
(-261,264)
(-261,311)
(-264,311)
a rectangle is got: 
(-121,264)
(-121,343)
(-187,343)
(-187,264)
a rectangle is got: 
(-121,211)
(-220,211)
(-220,140)
(-121,140)
a rectangle is got: 
(-90,140)
(-90,79)
(-29,79)
(-29,140)
a rectangle is got: 
(-29,92)
(97,92)
(97,140)
(-29,140)
a rectangle is got: 
(89,92)
(89,43)
(97,43)
(97,92)
a rectangle is got: 
(22,43)
(22,-58)
(97,-58)
(97,43)
a rectangle is got: 
(119,-58)
(119,-28)
(97,-28)
(97,-58)
a rectangle is got: 
(119,-75)
(55,-75)
(55,-76)
(119,-76)
a rectangle is got: 
(171,-76)
(171,-28)
(119,-28)
(119,-76)
a rectangle is got: 
(171,-96)
(177,-96)
(177,-28)
(171,-28)
a rectangle is got: 
(281,-96)
(281,-115)
(299,-115)
(299,-96)
a rectangle is got: 
(299,-40)
(282,-40)
(282,-96)
(299,-96)
a rectangle is got: 
(282,65)
(177,65)
(177,-96)
(282,-96)
a rectangle is got: 
(240,65)
(240,125)
(177,125)
(177,65)
a rectangle is got: 
(240,255)
(223,255)
(223,125)
(240,125)
a rectangle is got: 
(289,255)
(289,314)
(223,314)
(223,255)
a rectangle is got: 
(221,125)
(221,166)
(177,166)
(177,125)
a rectangle is got: 
(130,285)
(130,260)
(141,260)
(141,285)
a rectangle is got: 
(42,332)
(216,332)
(216,535)
(42,535)
a rectangle is got: 
(199,332)
(199,287)
(216,287)
(216,332)
a rectangle is got: 
(216,504)
(230,504)
(230,535)
(216,535)
a rectangle is got: 
(553,254)
(531,254)
(531,248)
(553,248)
a rectangle is got: 
(459,248)
(459,276)
(416,276)
(416,248)
a rectangle is got: 
(469,227)
(402,227)
(402,124)
(469,124)
a rectangle is got: 
(406,57)
(350,57)
(350,-15)
(406,-15)
a rectangle is got: 
(345,57)
(345,24)
(350,24)
(350,57)
a rectangle is got: 
(345,64)
(289,64)
(289,24)
(345,24)
a rectangle is got: 
(350,-2)
(340,-2)
(340,-15)
(350,-15)
a rectangle is got: 
(316,-2)
(316,-18)
(340,-18)
(340,-2)
a rectangle is got: 
(402,-3)
(516,-3)
(516,98)
(402,98)
a rectangle is got: 
(431,-3)
(431,-18)
(517,-18)
(517,-3)
a rectangle is got: 
(517,28)
(601,28)
(601,88)
(517,88)
a rectangle is got: 
(601,61)
(618,61)
(618,88)
(601,88)
a rectangle is got: 
(683,61)
(683,90)
(618,90)
(618,61)
a rectangle is got: 
(683,91)
(674,91)
(674,90)
(683,90)
a rectangle is got: 
(516,88)
(516,-3)
(517,-3)
(517,88)
a rectangle is got: 
(429,98)
(429,124)
(402,124)
(402,98)
a rectangle is got: 
(571,124)
(571,139)
(469,139)
(469,124)
a rectangle is got: 
(571,142)
(562,142)
(562,139)
(571,139)
a rectangle is got: 
(416,175)
(553,175)
(553,248)
(416,248)
a rectangle is got: 
(667,175)
(667,265)
(553,265)
(553,175)
a rectangle is got: 
(805,177)
(805,164)
(847,164)
(847,177)
a rectangle is got: 
(805,80)
(767,80)
(767,77)
(805,77)
a rectangle is got: 
(753,80)
(753,116)
(712,116)
(712,80)
a rectangle is got: 
(712,-19)
(645,-19)
(645,-74)
(712,-74)
a rectangle is got: 
(426,-19)
(426,-66)
(535,-66)
(535,-19)
a rectangle is got: 
(535,-161)
(645,-161)
(645,-19)
(535,-19)
a rectangle is got: 
(580,-161)
(580,-241)
(645,-241)
(645,-161)
a rectangle is got: 
(610,-241)
(610,-252)
(645,-252)
(645,-241)
a rectangle is got: 
(791,-74)
(791,-72)
(716,-72)
(716,-74)
a rectangle is got: 
(791,-188)
(805,-188)
(805,-72)
(791,-72)
a rectangle is got: 
(773,-188)
(773,-304)
(854,-304)
(854,-188)
a rectangle is got: 
(773,-346)
(820,-346)
(820,-304)
(773,-304)
a rectangle is got: 
(803,-346)
(803,-347)
(820,-347)
(820,-346)
a rectangle is got: 
(750,-347)
(750,-409)
(820,-409)
(820,-347)
a rectangle is got: 
(717,-409)
(717,-81)
(713,-81)
(713,-409)
a rectangle is got: 
(713,-483)
(767,-483)
(767,-472)
(713,-472)
a rectangle is got: 
(763,-483)
(763,-562)
(767,-562)
(767,-483)
a rectangle is got: 
(855,-472)
(855,-570)
(893,-570)
(893,-472)
a rectangle is got: 
(855,-645)
(798,-645)
(798,-675)
(855,-675)
a rectangle is got: 
(798,-671)
(780,-671)
(780,-675)
(798,-675)
a rectangle is got: 
(755,-671)
(755,-733)
(780,-733)
(780,-671)
a rectangle is got: 
(755,-655)
(679,-655)
(679,-733)
(755,-733)
a rectangle is got: 
(744,-655)
(744,-618)
(679,-618)
(679,-655)
a rectangle is got: 
(679,-711)
(653,-711)
(653,-733)
(679,-733)
a rectangle is got: 
(650,-711)
(650,-697)
(630,-697)
(630,-711)
a rectangle is got: 
(650,-655)
(604,-655)
(604,-697)
(650,-697)
a rectangle is got: 
(499,-655)
(499,-675)
(514,-675)
(514,-655)
a rectangle is got: 
(499,-568)
(644,-568)
(644,-551)
(499,-551)
a rectangle is got: 
(555,-553)
(691,-553)
(691,-406)
(555,-406)
a rectangle is got: 
(691,-379)
(668,-379)
(668,-406)
(691,-406)
a rectangle is got: 
(494,-406)
(494,-400)
(472,-400)
(472,-406)
a rectangle is got: 
(494,-303)
(438,-303)
(438,-347)
(494,-347)
a rectangle is got: 
(438,-297)
(358,-297)
(358,-347)
(438,-347)
a rectangle is got: 
(469,-347)
(469,-400)
(494,-400)
(494,-347)
a rectangle is got: 
(524,-407)
(466,-407)
(466,-480)
(524,-480)
a rectangle is got: 
(462,-480)
(462,-548)
(524,-548)
(524,-480)
a rectangle is got: 
(462,-513)
(440,-513)
(440,-548)
(462,-548)
a rectangle is got: 
(387,-513)
(387,-515)
(440,-515)
(440,-513)
a rectangle is got: 
(387,-442)
(345,-442)
(345,-449)
(387,-449)
a rectangle is got: 
(383,-449)
(383,-493)
(387,-493)
(387,-449)
a rectangle is got: 
(280,-493)
(280,-537)
(316,-537)
(316,-493)
a rectangle is got: 
(280,-497)
(169,-497)
(169,-537)
(280,-537)
a rectangle is got: 
(103,-497)
(103,-545)
(169,-545)
(169,-497)
a rectangle is got: 
(103,-450)
(54,-450)
(54,-545)
(103,-545)
a rectangle is got: 
(68,-450)
(68,-390)
(54,-390)
(54,-450)
a rectangle is got: 
(165,-390)
(165,-441)
(182,-441)
(182,-390)
a rectangle is got: 
(182,-295)
(54,-295)
(54,-390)
(182,-390)
a rectangle is got: 
(-148,-295)
(-148,-302)
(54,-302)
(54,-295)
a rectangle is got: 
(54,-514)
(-19,-514)
(-19,-542)
(54,-542)
a rectangle is got: 
(39,-542)
(39,-545)
(54,-545)
(54,-542)
a rectangle is got: 
(158,-545)
(158,-556)
(169,-556)
(169,-545)
a rectangle is got: 
(215,-556)
(215,-547)
(169,-547)
(169,-556)
a rectangle is got: 
(316,-515)
(387,-515)
(387,-493)
(316,-493)
a rectangle is got: 
(472,-480)
(555,-480)
(555,-406)
(472,-406)
a rectangle is got: 
(454,-551)
(454,-586)
(499,-586)
(499,-551)
a rectangle is got: 
(121,-586)
(121,-675)
(499,-675)
(499,-586)
a rectangle is got: 
(514,-713)
(394,-713)
(394,-722)
(514,-722)
a rectangle is got: 
(604,-722)
(604,-655)
(514,-655)
(514,-722)
a rectangle is got: 
(630,-809)
(607,-809)
(607,-820)
(630,-820)
a rectangle is got: 
(607,-768)
(521,-768)
(521,-820)
(607,-820)
a rectangle is got: 
(246,-768)
(246,-832)
(367,-832)
(367,-768)
a rectangle is got: 
(246,-736)
(118,-736)
(118,-832)
(246,-832)
a rectangle is got: 
(119,-722)
(42,-722)
(42,-751)
(119,-751)
a rectangle is got: 
(118,-815)
(21,-815)
(21,-884)
(118,-884)
a rectangle is got: 
(21,-792)
(-26,-792)
(-26,-884)
(21,-884)
a rectangle is got: 
(-8,-752)
(-106,-752)
(-106,-849)
(-8,-849)
a rectangle is got: 
(-172,-752)
(-172,-782)
(-106,-782)
(-106,-752)
a rectangle is got: 
(-26,-862)
(-61,-862)
(-61,-884)
(-26,-884)
a rectangle is got: 
(-194,-862)
(-194,-909)
(-191,-909)
(-191,-862)
a rectangle is got: 
(-194,-736)
(-250,-736)
(-250,-909)
(-194,-909)
a rectangle is got: 
(-191,-951)
(-61,-951)
(-61,-862)
(-191,-862)
a rectangle is got: 
(7,-951)
(7,-905)
(-61,-905)
(-61,-951)
a rectangle is got: 
(7,-982)
(-187,-982)
(-187,-986)
(7,-986)
a rectangle is got: 
(-264,-982)
(-264,-990)
(-233,-990)
(-233,-982)
a rectangle is got: 
(-264,-965)
(-433,-965)
(-433,-990)
(-264,-990)
a rectangle is got: 
(-486,-965)
(-486,-987)
(-433,-987)
(-433,-965)
a rectangle is got: 
(-486,-982)
(-551,-982)
(-551,-987)
(-486,-987)
a rectangle is got: 
(-551,-964)
(-500,-964)
(-500,-913)
(-551,-913)
a rectangle is got: 
(-531,-913)
(-531,-895)
(-551,-895)
(-551,-913)
a rectangle is got: 
(-371,-895)
(-371,-851)
(-541,-851)
(-541,-895)
a rectangle is got: 
(-378,-879)
(-320,-879)
(-320,-810)
(-378,-810)
a rectangle is got: 
(-320,-852)
(-299,-852)
(-299,-810)
(-320,-810)
a rectangle is got: 
(-372,-810)
(-372,-762)
(-378,-762)
(-378,-810)
a rectangle is got: 
(-336,-762)
(-336,-631)
(-378,-631)
(-378,-762)
a rectangle is got: 
(-336,-612)
(-284,-612)
(-284,-605)
(-336,-605)
a rectangle is got: 
(-372,-605)
(-372,-631)
(-336,-631)
(-336,-605)
a rectangle is got: 
(-541,-856)
(-551,-856)
(-551,-895)
(-541,-895)
a rectangle is got: 
(-688,-856)
(-688,-987)
(-551,-987)
(-551,-856)
a rectangle is got: 
(-688,-890)
(-817,-890)
(-817,-987)
(-688,-987)
a rectangle is got: 
(-817,-897)
(-986,-897)
(-986,-987)
(-817,-987)
a rectangle is got: 
(-916,-897)
(-916,-867)
(-954,-867)
(-954,-897)
a rectangle is got: 
(-954,-642)
(-986,-642)
(-986,-897)
(-954,-897)
a rectangle is got: 
(-233,-997)
(-187,-997)
(-187,-982)
(-233,-982)
a rectangle is got: 
(119,-986)
(119,-935)
(7,-935)
(7,-986)
a rectangle is got: 
(119,-954)
(312,-954)
(312,-935)
(119,-935)
a rectangle is got: 
(53,-935)
(53,-905)
(7,-905)
(7,-935)
a rectangle is got: 
(53,-907)
(263,-907)
(263,-905)
(53,-905)
a rectangle is got: 
(213,-884)
(213,-832)
(118,-832)
(118,-884)
a rectangle is got: 
(367,-782)
(521,-782)
(521,-768)
(367,-768)
a rectangle is got: 
(653,-820)
(653,-711)
(630,-711)
(630,-820)
a rectangle is got: 
(880,-733)
(880,-721)
(780,-721)
(780,-733)
a rectangle is got: 
(880,-801)
(924,-801)
(924,-721)
(880,-721)
a rectangle is got: 
(674,-801)
(674,-879)
(734,-879)
(734,-801)
a rectangle is got: 
(753,-744)
(664,-744)
(664,-809)
(753,-809)
a rectangle is got: 
(699,-861)
(492,-861)
(492,-934)
(699,-934)
a rectangle is got: 
(412,-861)
(412,-928)
(492,-928)
(492,-861)
a rectangle is got: 
(415,-834)
(309,-834)
(309,-874)
(415,-874)
a rectangle is got: 
(297,-834)
(297,-841)
(309,-841)
(309,-834)
a rectangle is got: 
(734,-970)
(388,-970)
(388,-998)
(734,-998)
a rectangle is got: 
(734,-992)
(924,-992)
(924,-801)
(734,-801)
a rectangle is got: 
(998,-992)
(998,-922)
(924,-922)
(924,-992)
a rectangle is got: 
(998,408)
(988,408)
(988,229)
(998,229)
a rectangle is got: 
(993,408)
(993,652)
(988,652)
(988,408)
a rectangle is got: 
(993,786)
(981,786)
(981,652)
(993,652)
a rectangle is got: 
(992,229)
(992,-610)
(998,-610)
(998,229)
a rectangle is got: 
(993,-610)
(993,-667)
(998,-667)
(998,-610)
a rectangle is got: 
(986,-667)
(986,-214)
(954,-214)
(954,-667)
a rectangle is got: 
(954,-744)
(998,-744)
(998,-667)
(954,-667)
a rectangle is got: 
(993,-744)
(993,-922)
(998,-922)
(998,-744)
a rectangle is got: 
(924,-741)
(952,-741)
(952,-721)
(924,-721)
a rectangle is got: 
(952,-706)
(939,-706)
(939,-721)
(952,-721)
a rectangle is got: 
(927,-675)
(927,-615)
(855,-615)
(855,-675)
a rectangle is got: 
(927,-241)
(918,-241)
(918,-615)
(927,-615)
a rectangle is got: 
(940,-241)
(940,-150)
(918,-150)
(918,-241)
a rectangle is got: 
(940,-164)
(954,-164)
(954,-150)
(940,-150)
a rectangle is got: 
(954,-147)
(946,-147)
(946,-150)
(954,-150)
a rectangle is got: 
(902,-615)
(902,-570)
(855,-570)
(855,-615)
a rectangle is got: 
(893,-508)
(905,-508)
(905,-472)
(893,-472)
a rectangle is got: 
(905,-365)
(842,-365)
(842,-428)
(905,-428)
a rectangle is got: 
(853,-428)
(853,-472)
(905,-472)
(905,-428)
a rectangle is got: 
(853,-433)
(820,-433)
(820,-472)
(853,-472)
a rectangle is got: 
(854,-184)
(805,-184)
(805,-188)
(854,-188)
a rectangle is got: 
(805,-15)
(792,-15)
(792,-72)
(805,-72)
a rectangle is got: 
(716,-70)
(712,-70)
(712,-74)
(716,-74)
a rectangle is got: 
(767,-70)
(767,80)
(712,80)
(712,-70)
a rectangle is got: 
(867,77)
(867,-6)
(918,-6)
(918,77)
a rectangle is got: 
(884,-6)
(884,-50)
(918,-50)
(918,-6)
a rectangle is got: 
(822,-50)
(822,-108)
(891,-108)
(891,-50)
a rectangle is got: 
(891,-86)
(918,-86)
(918,-50)
(891,-50)
a rectangle is got: 
(918,71)
(921,71)
(921,77)
(918,77)
a rectangle is got: 
(921,113)
(937,113)
(937,164)
(921,164)
a rectangle is got: 
(847,299)
(937,299)
(937,376)
(847,376)
a rectangle is got: 
(876,299)
(876,256)
(937,256)
(937,299)
a rectangle is got: 
(936,256)
(936,199)
(937,199)
(937,256)
a rectangle is got: 
(848,376)
(848,432)
(847,432)
(847,376)
a rectangle is got: 
(864,772)
(864,841)
(814,841)
(814,772)
a rectangle is got: 
(864,601)
(974,601)
(974,700)
(864,700)
a rectangle is got: 
(881,601)
(881,510)
(974,510)
(974,601)
a rectangle is got: 
(958,510)
(958,58)
(974,58)
(974,510)
a rectangle is got: 
(974,858)
(951,858)
(951,700)
(974,700)
a rectangle is got: 
(949,700)
(949,827)
(864,827)
(864,700)
a rectangle is got: 
(922,827)
(922,841)
(864,841)
(864,827)
a rectangle is got: 
(874,882)
(925,882)
(925,924)
(874,924)
a rectangle is got: 
(645,934)
(592,934)
(592,911)
(645,911)
a rectangle is got: 
(39,934)
(39,919)
(592,919)
(592,934)
a rectangle is got: 
(-331,909)
(-329,909)
(-329,914)
(-331,914)
a rectangle is got: 
(-177,914)
(-177,919)
(-331,919)
(-331,914)
a rectangle is got: 
(-589,919)
(-589,875)
(-584,875)
(-584,919)
a rectangle is got: 
(-589,975)
(531,975)
(531,983)
(-589,983)
a rectangle is got: 
(813,975)
(813,998)
(531,998)
(531,975)
a rectangle is got: 
(813,942)
(966,942)
(966,997)
(813,997)
a rectangle is got: 
(968,942)
(968,964)
(966,964)
(966,942)
a rectangle is got: 
(819,997)
(819,998)
(813,998)
(813,997)
a rectangle is got: 
(-824,998)
(-824,984)
(531,984)
(531,998)
a rectangle is got: 
(-700,983)
(-700,958)
(-661,958)
(-661,983)
a rectangle is got: 
(-830,958)
(-830,967)
(-839,967)
(-839,958)
a rectangle is got: 
(160,763)
(160,814)
(86,814)
(86,763)
a rectangle is got: 
(-69,778)
(-69,683)
(15,683)
(15,778)
a rectangle is got: 
(-261,470)
(-382,470)
(-382,369)
(-261,369)
a rectangle is got: 
(-931,-359)
(-931,-468)
(-823,-468)
(-823,-359)
a rectangle is got: 
(-231,-185)
(-231,-275)
(28,-275)
(28,-185)
a rectangle is got: 
(-121,343)
(-121,140)
(97,140)
(97,343)
a rectangle is got: 
(805,77)
(921,77)
(921,164)
(805,164)
a rectangle is got: 
(820,-409)
(713,-409)
(713,-472)
(820,-472)
((-999, 797) (-839, 967))
((-999, -39) (-980, 264))
((-999, 264) (-909, 593))
((-999, 593) (-940, 633))
((-856, 582) (-776, 633))
((-820, 559) (-776, 582))
((-824, 315) (-776, 559))
((-882, 203) (-776, 315))
((-811, 141) (-776, 203))
((-776, 698) (-744, 723))
((-744, 260) (-702, 432))
((-706, 489) (-702, 561))
((-715, 432) (-702, 489))
((-744, 432) (-718, 626))
((-689, 571) (-607, 626))
((-659, 436) (-607, 571))
((-744, 626) (-607, 637))
((-662, 637) (-509, 818))
((-509, 787) (-493, 818))
((-493, 806) (-353, 818))
((-353, 817) (-276, 818))
((-662, 818) (-518, 827))
((-744, 637) (-662, 723))
((-960, 633) (-776, 723))
((-999, 633) (-960, 678))
((-999, 678) (-977, 797))
((-839, 908) (-661, 958))
((-661, 875) (-589, 983))
((-612, 841) (-584, 875))
((-584, 883) (-331, 919))
((-331, 883) (38, 896))
((38, 870) (271, 896))
((264, 878) (313, 912))
((313, 878) (332, 903))
((264, 765) (336, 804))
((188, 765) (264, 775))
((160, 763) (188, 775))
((160, 810) (185, 814))
((-103, 781) (86, 814))
((15, 763) (86, 778))
((-236, 691) (-189, 778))
((-403, 712) (-236, 720))
((-403, 624) (-397, 712))
((-244, 691) (-236, 712))
((-189, 691) (-174, 718))
((-189, 759) (-69, 778))
((-69, 663) (-1, 683))
((-51, 634) (-1, 663))
((-156, 566) (-1, 634))
((-231, 566) (-156, 619))
((-383, 566) (-231, 589))
((22, 566) (79, 614))
((284, 614) (405, 700))
((404, 619) (524, 754))
((438, 520) (524, 619))
((420, 520) (438, 568))
((524, 656) (705, 754))
((705, 656) (735, 729))
((735, 805) (753, 813))
((753, 739) (800, 813))
((722, 729) (735, 813))
((252, 710) (284, 747))
((120, 614) (284, 710))
((22, 614) (120, 712))
((-1, 566) (22, 606))
((15, 683) (21, 731))
((332, 777) (485, 903))
((485, 796) (629, 903))
((602, 832) (646, 834))
((602, 834) (874, 924))
((814, 599) (863, 772))
((780, 487) (863, 599))
((772, 432) (863, 487))
((707, 177) (847, 432))
((725, 440) (762, 475))
((601, 349) (762, 440))
((559, 349) (601, 386))
((559, 386) (589, 492))
((696, 492) (732, 498))
((632, 585) (696, 631))
((562, 606) (632, 631))
((559, 492) (696, 585))
((665, 313) (707, 338))
((574, 313) (665, 314))
((706, 252) (707, 313))
((670, 177) (707, 252))
((667, 177) (670, 265))
((553, 265) (558, 293))
((515, 293) (558, 359))
((432, 293) (515, 421))
((432, 421) (498, 423))
((388, 423) (498, 511))
((322, 423) (388, 497))
((289, 469) (364, 521))
((230, 504) (289, 521))
((193, 535) (230, 544))
((-144, 435) (-98, 535))
((-110, 404) (-98, 435))
((-98, 520) (-5, 535))
((-40, 416) (-5, 426))
((-66, 435) (-40, 500))
((-51, 416) (-40, 435))
((-5, 416) (25, 535))
((25, 406) (42, 535))
((97, 285) (141, 343))
((-53, 343) (-46, 366))
((-187, 343) (-53, 381))
((-261, 264) (-187, 294))
((-347, 470) (-261, 472))
((-442, 470) (-441, 481))
((-506, 476) (-442, 521))
((-506, 521) (-492, 524))
((-564, 587) (-492, 619))
((-564, 545) (-558, 587))
((-520, 524) (-492, 587))
((-531, 476) (-506, 509))
((-478, 470) (-442, 476))
((-500, 342) (-386, 452))
((-500, 281) (-402, 342))
((-552, 126) (-402, 281))
((-670, 41) (-535, 180))
((-559, 180) (-558, 219))
((-687, 183) (-559, 352))
((-687, 352) (-683, 435))
((-670, 180) (-559, 183))
((-655, 8) (-615, 41))
((-701, -155) (-646, 10))
((-794, 101) (-696, 111))
((-794, 111) (-791, 124))
((-841, 47) (-833, 101))
((-833, -57) (-770, 1))
((-809, -119) (-770, -57))
((-833, 1) (-696, 101))
((-709, -155) (-701, -138))
((-805, -289) (-709, -138))
((-847, -264) (-775, -201))
((-847, -201) (-812, -58))
((-884, -359) (-775, -264))
((-931, -359) (-904, -187))
((-923, -187) (-904, -119))
((-923, -119) (-903, 43))
((-966, -468) (-931, -417))
((-977, -146) (-944, -119))
((-977, -119) (-933, -10))
((-996, -146) (-985, -105))
((-996, -459) (-991, -436))
((-996, -436) (-944, -146))
((-923, -488) (-863, -468))
((-863, -506) (-823, -468))
((-823, -506) (-768, -501))
((-823, -417) (-775, -359))
((-783, -471) (-775, -417))
((-746, -367) (-709, -364))
((-746, -364) (-647, -195))
((-650, -412) (-647, -238))
((-647, -472) (-397, -238))
((-487, -167) (-397, -144))
((-528, -173) (-508, -167))
((-508, -227) (-397, -167))
((-621, -227) (-557, -180))
((-621, -238) (-397, -227))
((-615, -150) (-561, 41))
((-561, -150) (-545, -130))
((-561, 33) (-535, 41))
((-443, 48) (-383, 126))
((-402, 126) (-383, 181))
((-478, 407) (-382, 470))
((-382, 340) (-342, 369))
((-293, 311) (-261, 369))
((-313, 216) (-264, 311))
((-313, 166) (-303, 177))
((-328, 45) (-303, 166))
((-376, -40) (-327, 45))
((-376, -486) (-331, -474))
((-432, -496) (-331, -486))
((-438, -597) (-331, -496))
((-414, -658) (-394, -557))
((-578, -700) (-414, -557))
((-600, -700) (-578, -577))
((-735, -577) (-669, -477))
((-760, -519) (-735, -477))
((-845, -704) (-735, -593))
((-896, -593) (-865, -557))
((-896, -728) (-877, -656))
((-896, -656) (-845, -593))
((-845, -844) (-646, -775))
((-652, -775) (-646, -762))
((-845, -775) (-804, -704))
((-735, -704) (-600, -577))
((-499, -721) (-414, -700))
((-631, -735) (-530, -721))
((-530, -847) (-443, -721))
((-443, -786) (-414, -721))
((-376, -474) (-326, -292))
((-376, -292) (-279, -185))
((-279, -236) (-231, -185))
((-231, -419) (-161, -339))
((-316, -419) (-270, -324))
((-316, -526) (-284, -522))
((-316, -522) (-160, -419))
((-215, -540) (-188, -500))
((-188, -584) (-178, -500))
((-262, -636) (-178, -621))
((-156, -689) (-143, -636))
((-275, -689) (-156, -646))
((-143, -719) (-85, -698))
((-143, -698) (-14, -636))
((-178, -636) (-90, -500))
((-160, -392) (-107, -372))
((-107, -443) (-25, -372))
((-161, -419) (-160, -372))
((-161, -359) (-106, -339))
((-106, -344) (21, -339))
((-231, -339) (-177, -281))
((-170, -281) (-69, -280))
((-231, -281) (-170, -275))
((93, -275) (108, -229))
((93, -229) (117, -170))
((117, -293) (204, -289))
((260, -306) (278, -289))
((260, -434) (331, -333))
((331, -434) (343, -423))
((260, -333) (323, -306))
((117, -289) (278, -170))
((59, -275) (93, -261))
((28, -275) (59, -232))
((28, -199) (65, -185))
((-376, -185) (-347, -40))
((-327, -70) (-234, 23))
((-234, -129) (-75, 0))
((-131, -184) (0, -129))
((-75, -129) (-54, -25))
((-69, -25) (-54, 57))
((-69, 57) (-4, 75))
((-234, 0) (-125, 23))
((-327, 23) (-303, 45))
((-296, 177) (-273, 181))
((-313, 177) (-296, 216))
((-264, 264) (-261, 311))
((-187, 264) (-121, 343))
((-220, 140) (-121, 211))
((-90, 79) (-29, 140))
((-29, 92) (97, 140))
((89, 43) (97, 92))
((22, -58) (97, 43))
((97, -58) (119, -28))
((55, -76) (119, -75))
((119, -76) (171, -28))
((171, -96) (177, -28))
((281, -115) (299, -96))
((282, -96) (299, -40))
((177, -96) (282, 65))
((177, 65) (240, 125))
((223, 125) (240, 255))
((223, 255) (289, 314))
((177, 125) (221, 166))
((130, 260) (141, 285))
((42, 332) (216, 535))
((199, 287) (216, 332))
((216, 504) (230, 535))
((531, 248) (553, 254))
((416, 248) (459, 276))
((402, 124) (469, 227))
((350, -15) (406, 57))
((345, 24) (350, 57))
((289, 24) (345, 64))
((340, -15) (350, -2))
((316, -18) (340, -2))
((402, -3) (516, 98))
((431, -18) (517, -3))
((517, 28) (601, 88))
((601, 61) (618, 88))
((618, 61) (683, 90))
((674, 90) (683, 91))
((516, -3) (517, 88))
((402, 98) (429, 124))
((469, 124) (571, 139))
((562, 139) (571, 142))
((416, 175) (553, 248))
((553, 175) (667, 265))
((805, 164) (847, 177))
((767, 77) (805, 80))
((712, 80) (753, 116))
((645, -74) (712, -19))
((426, -66) (535, -19))
((535, -161) (645, -19))
((580, -241) (645, -161))
((610, -252) (645, -241))
((716, -74) (791, -72))
((791, -188) (805, -72))
((773, -304) (854, -188))
((773, -346) (820, -304))
((803, -347) (820, -346))
((750, -409) (820, -347))
((713, -409) (717, -81))
((713, -483) (767, -472))
((763, -562) (767, -483))
((855, -570) (893, -472))
((798, -675) (855, -645))
((780, -675) (798, -671))
((755, -733) (780, -671))
((679, -733) (755, -655))
((679, -655) (744, -618))
((653, -733) (679, -711))
((630, -711) (650, -697))
((604, -697) (650, -655))
((499, -675) (514, -655))
((499, -568) (644, -551))
((555, -553) (691, -406))
((668, -406) (691, -379))
((472, -406) (494, -400))
((438, -347) (494, -303))
((358, -347) (438, -297))
((469, -400) (494, -347))
((466, -480) (524, -407))
((462, -548) (524, -480))
((440, -548) (462, -513))
((387, -515) (440, -513))
((345, -449) (387, -442))
((383, -493) (387, -449))
((280, -537) (316, -493))
((169, -537) (280, -497))
((103, -545) (169, -497))
((54, -545) (103, -450))
((54, -450) (68, -390))
((165, -441) (182, -390))
((54, -390) (182, -295))
((-148, -302) (54, -295))
((-19, -542) (54, -514))
((39, -545) (54, -542))
((158, -556) (169, -545))
((169, -556) (215, -547))
((316, -515) (387, -493))
((472, -480) (555, -406))
((454, -586) (499, -551))
((121, -675) (499, -586))
((394, -722) (514, -713))
((514, -722) (604, -655))
((607, -820) (630, -809))
((521, -820) (607, -768))
((246, -832) (367, -768))
((118, -832) (246, -736))
((42, -751) (119, -722))
((21, -884) (118, -815))
((-26, -884) (21, -792))
((-106, -849) (-8, -752))
((-172, -782) (-106, -752))
((-61, -884) (-26, -862))
((-194, -909) (-191, -862))
((-250, -909) (-194, -736))
((-191, -951) (-61, -862))
((-61, -951) (7, -905))
((-187, -986) (7, -982))
((-264, -990) (-233, -982))
((-433, -990) (-264, -965))
((-486, -987) (-433, -965))
((-551, -987) (-486, -982))
((-551, -964) (-500, -913))
((-551, -913) (-531, -895))
((-541, -895) (-371, -851))
((-378, -879) (-320, -810))
((-320, -852) (-299, -810))
((-378, -810) (-372, -762))
((-378, -762) (-336, -631))
((-336, -612) (-284, -605))
((-372, -631) (-336, -605))
((-551, -895) (-541, -856))
((-688, -987) (-551, -856))
((-817, -987) (-688, -890))
((-986, -987) (-817, -897))
((-954, -897) (-916, -867))
((-986, -897) (-954, -642))
((-233, -997) (-187, -982))
((7, -986) (119, -935))
((119, -954) (312, -935))
((7, -935) (53, -905))
((53, -907) (263, -905))
((118, -884) (213, -832))
((367, -782) (521, -768))
((630, -820) (653, -711))
((780, -733) (880, -721))
((880, -801) (924, -721))
((674, -879) (734, -801))
((664, -809) (753, -744))
((492, -934) (699, -861))
((412, -928) (492, -861))
((309, -874) (415, -834))
((297, -841) (309, -834))
((388, -998) (734, -970))
((734, -992) (924, -801))
((924, -992) (998, -922))
((988, 229) (998, 408))
((988, 408) (993, 652))
((981, 652) (993, 786))
((992, -610) (998, 229))
((993, -667) (998, -610))
((954, -667) (986, -214))
((954, -744) (998, -667))
((993, -922) (998, -744))
((924, -741) (952, -721))
((939, -721) (952, -706))
((855, -675) (927, -615))
((918, -615) (927, -241))
((918, -241) (940, -150))
((940, -164) (954, -150))
((946, -150) (954, -147))
((855, -615) (902, -570))
((893, -508) (905, -472))
((842, -428) (905, -365))
((853, -472) (905, -428))
((820, -472) (853, -433))
((805, -188) (854, -184))
((792, -72) (805, -15))
((712, -74) (716, -70))
((712, -70) (767, 80))
((867, -6) (918, 77))
((884, -50) (918, -6))
((822, -108) (891, -50))
((891, -86) (918, -50))
((918, 71) (921, 77))
((921, 113) (937, 164))
((847, 299) (937, 376))
((876, 256) (937, 299))
((936, 199) (937, 256))
((847, 376) (848, 432))
((814, 772) (864, 841))
((864, 601) (974, 700))
((881, 510) (974, 601))
((958, 58) (974, 510))
((951, 700) (974, 858))
((864, 700) (949, 827))
((864, 827) (922, 841))
((874, 882) (925, 924))
((592, 911) (645, 934))
((39, 919) (592, 934))
((-331, 909) (-329, 914))
((-331, 914) (-177, 919))
((-589, 875) (-584, 919))
((-589, 975) (531, 983))
((531, 975) (813, 998))
((813, 942) (966, 997))
((966, 942) (968, 964))
((813, 997) (819, 998))
((-824, 984) (531, 998))
((-700, 958) (-661, 983))
((-839, 958) (-830, 967))
((86, 763) (160, 814))
((-69, 683) (15, 778))
((-382, 369) (-261, 470))
((-931, -468) (-823, -359))
((-231, -275) (28, -185))
((-121, 140) (97, 343))
((805, 77) (921, 164))
((713, -472) (820, -409))
