#ifndef CGL_OVERLAP_HPP
#define CGL_OVERLAP_HPP

#include <rectifwd.hpp>
#include <vector>
#include "sweeper.hpp"
#include "intvl_set.hpp"

namespace cgl {
  /** 
   * @addtogroup cgl
   * @{
   */

  /** Event info */
  struct event_info
  {
    const recti::Rectangle<int>* _data;   /**< rectanlge that the event point belong to */
    intvl_set<int>::const_iterator _it;    /**< for easing the intervals */
  };


  /** Point event for plane sweeping algorithm. An event happen when
      the sweep line encounters the corner points of rectangles. */
  struct point_event
  {
    bool _is_start;      /**< whether it is a start point */
    int  _x;             /**< x coordinate */
    event_info* _info;   /**< Event info */

    /** @return whether this event has higher priority than rhs */
    inline bool operator<(const point_event& rhs) const
    { return _x > rhs._x || (_x == rhs._x && !_is_start); }
  };


  /** Overlap sweeping algorithm for overlap detection of a set 
      of rectangles */
  class overlap_sweeper
  {
  private:
    std::vector<event_info> _event_infos;     /**< event information */
    std::vector<point_event> _point_events;   /**< point events */

  public:
    /** Constructor */
    overlap_sweeper(const std::vector<recti::rectangle>& rects);

    /** Overlap detection */
    bool scan() const;
  };
}

#endif
